{"version":3,"sources":["webpack:///src/components/user/page/albumdetail.vue","webpack:///./src/components/user/page/albumdetail.vue?c500","webpack:///./src/components/user/page/albumdetail.vue"],"names":["albumdetail","components","vHead","header","vNav","navigation","vFoot","footer","data","id","style","dialogVisible","newPlaylist","name","intro","type","info","rules","required","message","trigger","min","max","isOverflow","isLogin","album","songList","playlistList","methods","indexMethod","index","handleClose","done","this","$confirm","then","_","catch","handleMouseEnter","row","column","cell","event","Flag","handleMouseOut","isopen","handle","handleOverflow","offsetHeight","document","getElementById","scrollHeight","playAllSong","$store","dispatch","collect","_this","axios","get","serverUrl","params","albumId","response","state","likeAlbums","push","sessionStorage","setItem","stringify_default","isCollected","$message","showClose","err","console","log","confirmButtonText","cancelButtonText","$router","path","cancelCollect","_this2","i","length","splice","handleAlbumCommand","command","addAlbumToPlaylist","playlistId","_this3","playSong","collectSong","_this4","songId","likeSongs","handleSongCommand","songs","addSongToPlaylist","param2","param1","_this5","submitForm","_this6","$refs","validate","valid","post","thisPlaylist","resetFields","downloadSong","_this7","window","location","href","timestampToTime","timestamp","date","Date","Y","getFullYear","M","getMonth","D","getDate","getAlbumInfo","_this8","image","__webpack_require__","releaseDate","filePath","lyricsPath","$set","getIsCollected","getPlaylistList","flag","created","$route","query","scrollTo","computed","mounted","updated","page_albumdetail","render","_vm","_h","$createElement","_c","_self","staticClass","_v","attrs","staticStyle","background","gutter","span","offset","width","height","margin-top","align","src","margin-bottom","_s","to","artistId","color","cursor","onmouseover","onmouseout","artistName","background-color","icon","on","click","slot","_l","playlist","key","divided","stripe","cell-mouse-enter","cell-mouse-leave","label","scopedSlots","_u","fn","scope","circle","$event","$index","_e","placement","visible-change","prop","display","-webkit-box-orient","-webkit-line-clamp","overflow","title","visible","before-close","update:visible","ref","model","label-width","placeholder","value","callback","$$v","expression","staticRenderFns","Component","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/7.9590840e35e0144e2a61.js","sourcesContent":["<template>\r\n  <div class=\"wrapper\">\r\n    <v-head></v-head>\r\n    <v-nav></v-nav>\r\n    <div id=\"albumdetail\" :data=\"album\">\r\n      <el-row :gutter=\"50\" style=\"background: linear-gradient(#F2F2F2, #FFFFFF);\">\r\n        <el-col :span=\"4\" :offset=\"3\">\r\n          <div>\r\n            <img align=right style=\"width:230px;height:230px;margin-top:20px\" :src=album.image>\r\n          </div>\r\n        </el-col>\r\n        <el-col :span=\"12\">\r\n          <div>\r\n            <p class=\"font_albumName\" style=\"margin-bottom:0px\">{{album.name}}</p>\r\n            <i class=\"el-icon-service\"></i>\r\n            <router-link :to=\"{ path: '/user/artistdetail', query: { id: album.artistId }}\">\r\n              <span class=\"font_albumArtistName\"  style=\"color:black;cursor:pointer\" onmouseover=\"this.style.color='#31C27C';\" onmouseout=\"this.style.color='black';\">{{album.artistName}}</span>\r\n            </router-link>\r\n            <div>\r\n              <p class=\"font_other\">流派 : {{album.style}}</p>\r\n              <p class=\"font_other\">发行时间 : {{album.releaseDate}}</p>\r\n            </div>\r\n            <el-button type=\"primary\" icon=\"el-icon-caret-right\" style=\"background-color:#31C27C\" onmouseover=\"this.style.backgroundColor='#2CAF6F';\" onmouseout=\"this.style.backgroundColor='#31C27C';\" v-on:click=\"playAllSong\">播放全部</el-button>\r\n            <el-button v-if=\"album.isCollected\" icon=\"el-icon-star-on\" v-on:click=\"cancelCollect\">已收藏</el-button>\r\n            <el-button v-else icon=\"el-icon-star-off\" v-on:click=\"collect\">收藏</el-button>\r\n            <el-dropdown trigger=\"click\" @command=\"handleAlbumCommand\">\r\n              <el-button icon=\"el-icon-plus\">添加到<i class=\"el-icon-arrow-down el-icon--right\"></i>\r\n              </el-button>\r\n              <el-dropdown-menu slot=\"dropdown\" :data=\"playlistList\">\r\n                <el-dropdown-item command=\"playqueue\">播放队列</el-dropdown-item>\r\n                <div v-if=\"isLogin\">\r\n                  <el-dropdown-item v-for=\"playlist in playlistList\" :key=\"playlist.id\" :command='{type:\"playlist\",params:playlist.id}'>{{playlist.name}}</el-dropdown-item>\r\n                  <el-dropdown-item command=\"newplaylist\" divided>添加到新歌单</el-dropdown-item>\r\n                </div>\r\n                <el-dropdown-item v-else command=\"login\" divided>登录后添加到歌单</el-dropdown-item>\r\n              </el-dropdown-menu>\r\n            </el-dropdown>\r\n          </div>\r\n        </el-col>\r\n      </el-row>\r\n      <el-row>\r\n        <el-col :span=\"16\" :offset=\"2\">\r\n          <div>\r\n            <el-table :data=\"songList\" :stripe=true style=\"width:95%;\" @cell-mouse-enter=\"handleMouseEnter\" @cell-mouse-leave=\"handleMouseOut\" class=\"spHeight\">\r\n              <el-table-column type=\"index\" label=\" \" :index=\"indexMethod\"></el-table-column>\r\n              <el-table-column label=\"歌曲\" width=350>\r\n                <template slot-scope=\"scope\">\r\n                  <router-link :to=\"{ path: '/user/songdetail', query: { id: scope.row.id }}\">\r\n                    <span style=\"color:black;cursor:pointer\" onmouseover=\"this.style.color='#31C27C';\" onmouseout=\"this.style.color='black';\">{{scope.row.name}}</span>\r\n                  </router-link>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column label=\" \" width=150>\r\n                <template slot-scope=\"scope\">\r\n                  <span v-if=\"scope.row.Flag\"> <el-button icon=\"el-icon-caret-right\" circle v-on:click=\"playSong(scope.$index)\"></el-button> </span>\r\n                  <span v-if=\"scope.row.Flag\"> \r\n                    <el-dropdown trigger=\"click\" placement=\"bottom-start\" @visible-change=\"handle(scope.row,$event)\" @command=\"handleSongCommand\">\r\n                      <el-button icon=\"el-icon-plus\" circle></el-button>\r\n                      <el-dropdown-menu slot=\"dropdown\" :data=\"playlistList\">\r\n                        <el-dropdown-item :command='{type:\"playqueue\",params:scope.$index}'>播放队列</el-dropdown-item>\r\n                        <div v-if=\"isLogin\">\r\n                          <el-dropdown-item divided :command='{type:\"collect\",params:scope.$index}'>我喜欢</el-dropdown-item>\r\n                          <el-dropdown-item v-for=\"playlist in playlistList\" :key=\"playlist.id\" :command='{type:\"playlist\",param1:playlist.id,param2:scope.row}'>{{playlist.name}}</el-dropdown-item>\r\n                          <el-dropdown-item :command='{type:\"newplaylist\",params:scope.row}' divided>添加到新歌单</el-dropdown-item>\r\n                        </div>\r\n                        <el-dropdown-item v-else command=\"login\" divided>登录后添加到歌单</el-dropdown-item>\r\n                      </el-dropdown-menu>\r\n                    </el-dropdown>\r\n                  </span>\r\n                  <span v-if=\"scope.row.Flag\"> <el-button icon=\"el-icon-download\" circle v-on:click=\"downloadSong(scope.row)\"></el-button> </span>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column label=\"歌手\" width=150>\r\n                <template slot-scope=\"scope\">\r\n                  <router-link :to=\"{ path: '/user/artistdetail', query: { id: scope.row.artistId }}\">\r\n                    <span style=\"color:black;cursor:pointer\" onmouseover=\"this.style.color='#31C27C';\" onmouseout=\"this.style.color='black';\">{{scope.row.artistName}}</span>\r\n                  </router-link>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"duration\" label=\"时长\">\r\n              </el-table-column>\r\n            </el-table>\r\n          </div>\r\n        </el-col>\r\n        <el-col :span=\"4\">\r\n          <div>\r\n            <p v-if=\"album.intro\" class=\"font_albumIntro\">简介</p>\r\n            <p id=\"albumIntro\" style=\"display: -webkit-box;-webkit-box-orient: vertical;-webkit-line-clamp: 4;overflow: hidden;\" class=\"font_other\">{{album.intro}}</p>\r\n            <el-popover v-if=\"this.isOverflow\" placement=\"left\" title=\"专辑简介\" trigger=\"click\" width=500>\r\n              <p class=\"font_other\">{{album.intro}}</p>\r\n              <el-button type=\"text\" slot=\"reference\" style=\"color:black\" onmouseover=\"this.style.color='#31C27C';\" onmouseout=\"this.style.color='black';\">[更多]</el-button>\r\n            </el-popover>\r\n          </div>\r\n        </el-col>\r\n      </el-row>\r\n      <el-dialog title=\"创建歌单\" :visible.sync=\"dialogVisible\" width=\"30%\" :before-close=\"handleClose\">\r\n        <el-form :model=\"newPlaylist\" :rules=\"rules\" ref=\"newPlaylist\" label-width=\"100px\">\r\n          <el-form-item label=\"歌单名称\" prop=\"name\">\r\n            <el-input v-model=\"newPlaylist.name\" placeholder=\"请输入歌单名称\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"歌单简介\" prop=\"intro\">\r\n            <el-input type=\"textarea\" v-model=\"newPlaylist.intro\" placeholder=\"请输入歌单简介\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"submitForm\">完成</el-button>\r\n            <el-button @click=\"dialogVisible=false\">取消</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-dialog>\r\n    </div>\r\n    <v-foot></v-foot>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import vHead from '../common/header.vue'\r\n  import vNav from '../common/navigation.vue'\r\n  import vFoot from '../common/footer.vue'\r\n  \r\n  export default {\r\n   components: {\r\n    vHead,\r\n    vNav,\r\n    vFoot\r\n  },\r\n  data(){\r\n    return{\r\n      id: '',\r\n      style: ['', 'POP 流行', 'ELECTRONIC 电子','ROCK 摇滚' ,'CLASSIC 古典','FOLK 民谣', 'R&B', '其他'],\r\n      dialogVisible:false,\r\n      newPlaylist: {\r\n        id:'',\r\n        name: '',\r\n        intro: '',\r\n        type:'',\r\n        info:''\r\n      },\r\n      rules: {\r\n        name: [\r\n        { required: true, message: '请输入歌单名称', trigger: 'blur' },\r\n        { min: 1, max: 30, message: '长度在 1 到 30 个字符', trigger: 'blur' }\r\n        ],\r\n        intro: [\r\n        { min: 1, max: 680, message: '长度在 680 个字符以内', trigger: 'blur' }\r\n        ]\r\n      },\r\n      isOverflow:'',\r\n      isLogin:'',\r\n      album:{},\r\n      songList: [],\r\n      playlistList:[],\r\n    }\r\n  },\r\n  methods: {\r\n    //生成列表里的序号\r\n    indexMethod(index) {\r\n      return index+1;\r\n    },\r\n    //对话框关闭前调用，询问确认关闭\r\n    handleClose(done) {\r\n      this.$confirm('确认关闭？')\r\n      .then(_ => {\r\n        done();\r\n      })\r\n      .catch(_ => {});\r\n    },\r\n    //鼠标移入列表单元格调用，修改那一行的标志\r\n    handleMouseEnter:function(row, column, cell, event){\r\n      row.Flag=true;\r\n    },\r\n    //鼠标移出列表单元格调用，修改那一行的标志\r\n    handleMouseOut:function(row, column, cell, event){\r\n      if(!row.isopen){\r\n        row.Flag=false;}\r\n      else{\r\n        return false;\r\n      }\r\n    },\r\n    //列表里的添加到下拉框显示状态改变调用，修改那一行的标志\r\n    handle:function(row,event){\r\n      row.Flag=event;\r\n      row.isopen=event;\r\n    },\r\n    //判断文本是否溢出div框\r\n    handleOverflow:function(){\r\n      var offsetHeight = document.getElementById(\"albumIntro\").offsetHeight;  \r\n      var scrollHeight = document.getElementById(\"albumIntro\").scrollHeight;\r\n      if (offsetHeight < scrollHeight) {\r\n        this.isOverflow=true;\r\n      }\r\n      else{\r\n        this.isOverflow=false;\r\n      }\r\n    },\r\n    //点击播放全部按钮调用，播放专辑所有歌曲\r\n    playAllSong:function(){\r\n      this.$store.dispatch(\"play\", [this.songList, 0, false]);\r\n    },\r\n    //点击收藏按钮调用，如果用户登录，收藏专辑，否则询问是否登录\r\n    collect:function(){\r\n      if(this.isLogin){\r\n        this.axios.get(this.serverUrl+'/user/likeAlbum',{\r\n          params:{\r\n            albumId:this.album.id\r\n          }\r\n        })\r\n        .then(response =>{\r\n          if(response){\r\n            this.state.likeAlbums.push(this.album);\r\n            sessionStorage.setItem('likeAlbums', JSON.stringify(this.state.likeAlbums));\r\n            this.album.isCollected=true;\r\n            this.$message({\r\n              showClose: true,\r\n              message: '收藏专辑成功',\r\n              type: 'success'\r\n            });\r\n          }  \r\n          else{\r\n            this.$message({\r\n              showClose: true,\r\n              message: '会话超时',\r\n              type: 'error'\r\n            });\r\n          }\r\n        })\r\n        .catch(function(err){\r\n          console.log(err);\r\n        });\r\n      }\r\n      else{\r\n        this.$confirm('还未登录,是否现在登录?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n        }).then(() => {\r\n          this.$router.push({\r\n          path: \"/user/unlogin\"\r\n          })\r\n        }).catch(() => {\r\n        });\r\n      }\r\n    },\r\n    //点击已收藏按钮调用，取消专辑收藏\r\n    cancelCollect:function(){ \r\n      this.axios.get(this.serverUrl+'/user/unlikeAlbum',{\r\n        params:{\r\n          albumId:this.album.id\r\n        }\r\n      })\r\n      .then(response =>{\r\n        if(response){\r\n          for(var i=0;i<this.state.likeAlbums.length;i++){\r\n            if(this.state.likeAlbums[i].id==this.album.id){\r\n              this.state.likeAlbums.splice(i,1);\r\n              break;\r\n            }\r\n          }\r\n          sessionStorage.setItem('likeAlbums', JSON.stringify(this.state.likeAlbums));\r\n          this.album.isCollected=false;\r\n          this.$message({\r\n            showClose: true,\r\n            message: '取消收藏成功',\r\n            type: 'success'\r\n          });\r\n        }\r\n        else{\r\n          this.$message({\r\n            showClose: true,\r\n            message: '会话超时',\r\n            type: 'error'\r\n          });\r\n        }\r\n      })\r\n      .catch(function(err){\r\n        console.log(err);\r\n      });\r\n    },\r\n    //点击专辑添加到按钮中的一项调用，处理添加到按钮的不同请求\r\n    handleAlbumCommand:function(command){\r\n      if(command==\"login\"){\r\n        this.$router.push({\r\n          path: \"/user/unlogin\"\r\n        })\r\n      }\r\n      else if(command==\"newplaylist\"){\r\n        this.dialogVisible=true;\r\n        this.newPlaylist.type=\"album\";\r\n        this.newPlaylist.info=this.album.id;\r\n      }\r\n      else if(command==\"playqueue\"){\r\n        this.$store.dispatch(\"addToSongList\", this.songList);\r\n      }\r\n      else{\r\n        this.addAlbumToPlaylist(command.params);\r\n      }\r\n    },\r\n    //把专辑添加到歌单\r\n    addAlbumToPlaylist:function(playlistId){\r\n      this.axios.get(this.serverUrl+'/playlist/addAlbum',{\r\n        params:{\r\n          albumId:this.album.id,\r\n          playlistId:playlistId\r\n        }\r\n      })\r\n      .then(response =>{\r\n        if(response){\r\n          this.$message({\r\n            showClose: true,\r\n            message: '已成功添加到歌单',\r\n            type: 'success'\r\n          });\r\n        }\r\n        else{\r\n          this.$message({\r\n            showClose: true,\r\n            message: '会话超时',\r\n            type: 'error'\r\n          });\r\n        }\r\n      })\r\n      .catch(function(err){\r\n        console.log(err);\r\n      });\r\n    },\r\n    //点击歌曲播放按钮调用，播放歌曲\r\n    playSong:function(index){\r\n      this.$store.dispatch(\"play\", [this.songList, index, false]);\r\n    },\r\n    //收藏歌曲\r\n    collectSong:function(index){\r\n      this.axios.get(this.serverUrl+'/user/likeSong',{\r\n        params:{\r\n          songId:this.songList[index].id\r\n        }\r\n      })\r\n      .then(response =>{\r\n        if(response){\r\n          this.state.likeSongs.push(this.songList[index]);\r\n          sessionStorage.setItem('likeSongs', JSON.stringify(this.state.likeSongs));\r\n          this.$message({\r\n            showClose: true,\r\n            message: '收藏歌曲成功',\r\n            type: 'success'\r\n          });\r\n        }  \r\n        else{\r\n          this.$message({\r\n            showClose: true,\r\n            message: '会话超时',\r\n            type: 'error'\r\n          });\r\n        }\r\n      })\r\n      .catch(function(err){\r\n        console.log(err);\r\n      });\r\n    },\r\n    //点击歌曲列表里添加到中的一项调用，处理添加到按钮的不同请求\r\n    handleSongCommand:function(command){\r\n      if(command==\"login\"){\r\n        this.$router.push({\r\n          path: \"/user/unlogin\"\r\n        })\r\n      }\r\n      else if(command.type==\"playqueue\"){\r\n        var song=this.songList[command.params];\r\n        var songs=[song];\r\n        this.$store.dispatch(\"addToSongList\",songs);\r\n      }\r\n      else if(command.type==\"collect\"){\r\n        this.collectSong(command.params);\r\n      }\r\n      else if(command.type==\"newplaylist\"){\r\n        this.dialogVisible=true;\r\n        this.newPlaylist.type=\"song\";\r\n        this.newPlaylist.info=command.params.id;\r\n      }\r\n      else{\r\n        this.addSongToPlaylist(command.param2.id,command.param1);\r\n      }\r\n    },\r\n    //把歌曲添加到歌单\r\n    addSongToPlaylist:function(songId,playlistId){\r\n      this.axios.get(this.serverUrl+'/playlist/addSong',{\r\n        params:{\r\n          songId:songId,\r\n          playlistId:playlistId\r\n        }\r\n      })\r\n      .then(response =>{\r\n        if(response){\r\n          this.$message({\r\n            showClose: true,\r\n            message: '已成功添加到歌单',\r\n            type: 'success'\r\n          });\r\n        }\r\n        else{\r\n          this.$message({\r\n            showClose: true,\r\n            message: '会话超时',\r\n            type: 'error'\r\n          });\r\n        }\r\n      })\r\n      .catch(function(err){\r\n        console.log(err);\r\n      });\r\n    },\r\n    //点击表单完成按钮调用，提交表单\r\n    submitForm:function(){\r\n      this.$refs[\"newPlaylist\"].validate((valid) => {\r\n        if (valid) {\r\n          this.axios.post(this.serverUrl+'/playlist/create',{\r\n            name:this.newPlaylist.name,\r\n            intro:this.newPlaylist.intro\r\n          })\r\n          .then(response =>{\r\n            if(response.data!=-1){\r\n              var thisPlaylist={id:response.data,name:this.newPlaylist.name,intro:this.newPlaylist.intro};\r\n              this.state.playlistList.push(thisPlaylist);\r\n              sessionStorage.setItem('playlistList', JSON.stringify(this.state.playlistList));\r\n              this.dialogVisible=false;\r\n              this.$refs[\"newPlaylist\"].resetFields();\r\n              this.$message({\r\n                showClose: true,\r\n                message: '歌单创建成功',\r\n                type: 'success'\r\n              });\r\n              if(this.newPlaylist.type==\"album\"){\r\n                this.addAlbumToPlaylist(response.data);\r\n              }\r\n              else{\r\n                this.addSongToPlaylist(this.newPlaylist.info,response.data);\r\n              }\r\n            }\r\n            else{\r\n              this.$message({\r\n                showClose: true,\r\n                message: '会话超时',\r\n                type: 'error'\r\n              });\r\n            }\r\n          })\r\n          .catch(function(err){\r\n            console.log(err);\r\n          });\r\n        } \r\n        else {\r\n          this.$message({\r\n            showClose: true,\r\n            message: '格式不正确',\r\n            type: 'error'\r\n          });\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    //点击歌曲下载按钮调用，下载歌曲\r\n    downloadSong:function(row){\r\n      if(this.isLogin){\r\n        window.location.href = this.serverUrl + \"/download/downloadSong?id=\" + row.id;\r\n      }\r\n      else{\r\n        this.$confirm('还未登录,是否现在登录?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n        }).then(() => {\r\n          this.$router.push({\r\n            path: \"/user/unlogin\"\r\n          })\r\n        }).catch(() => {\r\n        });\r\n      }\r\n    },\r\n    //将时间戳变成固定格式时间\r\n    timestampToTime: function(timestamp) {\r\n      var date = new Date(timestamp);\r\n      var Y = date.getFullYear() + '-';\r\n      var M = (date.getMonth()+1 < 10 ? '0'+(date.getMonth()+1) : date.getMonth()+1) + '-';\r\n      var D = date.getDate();\r\n      if(D < 10) D = '0' + D;\r\n      return Y+M+D;\r\n    },\r\n    //从后台获取专辑信息\r\n    getAlbumInfo:function(){\r\n      this.axios.get(this.serverUrl+'/album/getInfo',{\r\n        params:{\r\n          id:this.album.id\r\n        }\r\n      })\r\n      .then(response => {\r\n        this.album = response.data;\r\n        if(this.album.image==null){\r\n          this.album.image=require('../../../assets/暂无图片.png');\r\n        }\r\n        else{\r\n          this.album.image = this.serverUrl + this.album.image;\r\n        }\r\n        this.album.releaseDate = this.timestampToTime(this.album.releaseDate);\r\n        this.album.style = this.style[this.album.style];\r\n        this.songList = this.album.songList;\r\n        for(var i = 0; i < this.songList.length; i++){\r\n          if(this.songList[i].image==null){\r\n            this.songList[i].image=require('../../../assets/暂无图片.png');\r\n          }\r\n          else{\r\n            this.songList[i].image=this.serverUrl+this.songList[i].image;\r\n          }\r\n          this.songList[i].filePath=this.serverUrl+this.songList[i].filePath;\r\n          this.songList[i].lyricsPath=this.serverUrl+this.songList[i].lyricsPath;\r\n          this.$set(this.songList[i],'Flag',false);\r\n          this.$set(this.songList[i],'isopen',false);\r\n        }\r\n        this.$set(this.album,'isCollected',false);\r\n        if(this.isLogin){\r\n          this.getIsCollected();\r\n          this.getPlaylistList();\r\n        }\r\n      })\r\n      .catch(function(err){\r\n        console.log(err);\r\n      });\r\n    },\r\n    //得到用户歌单列表\r\n    getPlaylistList:function(){\r\n      if(this.isLogin){\r\n        this.playlistList=this.state.playlistList;\r\n      }\r\n      else{\r\n        return false;\r\n      }\r\n    },\r\n    //得到专辑是否收藏\r\n    getIsCollected:function(){\r\n      var flag=false;\r\n      for(var i=0;i<this.state.likeAlbums.length;i++){\r\n        if(this.album.id==this.state.likeAlbums[i].id){\r\n          flag=true;\r\n          break;\r\n        }\r\n      }\r\n      this.album.isCollected=flag;\r\n    },\r\n  },\r\n  //vue的created生命周期，从路由信息里获取专辑id\r\n  created(){\r\n    this.album.id=this.$route.query.id;\r\n    window.scrollTo(0,0);\r\n  },\r\n  //从state.js获取常用参数\r\n  computed:{\r\n    serverUrl(){\r\n      return this.$store.state.serverUrl;\r\n    },\r\n    state(){\r\n      return this.$store.state;\r\n    }\r\n  },\r\n  //vue的mounted生命周期，获取专辑信息\r\n  mounted(){\r\n    this.isLogin=this.state.isLogin;\r\n    this.getAlbumInfo();\r\n  },\r\n  //vue的updated生命周期，判断文本是否溢出div框\r\n  updated: function (){\r\n    this.handleOverflow();\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\n#albumdetail{\r\n  padding: 0px 30px;\r\n}\r\n.spHeight td{\r\n  height:70px;\r\n}\r\n.el-popover{\r\n  width:550px;\r\n}\r\n.font_albumName{\r\n  font-family:\"Microsoft YaHei\";\r\n  font-size:xx-large;\r\n}\r\n.font_albumArtistName{\r\n  font-family:\"Hiragino Sans GB\";\r\n  font-size:x-large;\r\n}\r\n.font_albumIntro{\r\n  font-family:\"Hiragino Sans GB\";\r\n  font-size:x-large;\r\n}\r\n.font_other{\r\n  font-family:\"Hiragino Sans GB\";\r\n  font-size:Medium;\r\n}\r\na {\r\n text-decoration:none;\r\n out-line: none;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/user/page/albumdetail.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wrapper\"},[_c('v-head'),_vm._v(\" \"),_c('v-nav'),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"albumdetail\",\"data\":_vm.album}},[_c('el-row',{staticStyle:{\"background\":\"linear-gradient(#F2F2F2, #FFFFFF)\"},attrs:{\"gutter\":50}},[_c('el-col',{attrs:{\"span\":4,\"offset\":3}},[_c('div',[_c('img',{staticStyle:{\"width\":\"230px\",\"height\":\"230px\",\"margin-top\":\"20px\"},attrs:{\"align\":\"right\",\"src\":_vm.album.image}})])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":12}},[_c('div',[_c('p',{staticClass:\"font_albumName\",staticStyle:{\"margin-bottom\":\"0px\"}},[_vm._v(_vm._s(_vm.album.name))]),_vm._v(\" \"),_c('i',{staticClass:\"el-icon-service\"}),_vm._v(\" \"),_c('router-link',{attrs:{\"to\":{ path: '/user/artistdetail', query: { id: _vm.album.artistId }}}},[_c('span',{staticClass:\"font_albumArtistName\",staticStyle:{\"color\":\"black\",\"cursor\":\"pointer\"},attrs:{\"onmouseover\":\"this.style.color='#31C27C';\",\"onmouseout\":\"this.style.color='black';\"}},[_vm._v(_vm._s(_vm.album.artistName))])]),_vm._v(\" \"),_c('div',[_c('p',{staticClass:\"font_other\"},[_vm._v(\"流派 : \"+_vm._s(_vm.album.style))]),_vm._v(\" \"),_c('p',{staticClass:\"font_other\"},[_vm._v(\"发行时间 : \"+_vm._s(_vm.album.releaseDate))])]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"background-color\":\"#31C27C\"},attrs:{\"type\":\"primary\",\"icon\":\"el-icon-caret-right\",\"onmouseover\":\"this.style.backgroundColor='#2CAF6F';\",\"onmouseout\":\"this.style.backgroundColor='#31C27C';\"},on:{\"click\":_vm.playAllSong}},[_vm._v(\"播放全部\")]),_vm._v(\" \"),(_vm.album.isCollected)?_c('el-button',{attrs:{\"icon\":\"el-icon-star-on\"},on:{\"click\":_vm.cancelCollect}},[_vm._v(\"已收藏\")]):_c('el-button',{attrs:{\"icon\":\"el-icon-star-off\"},on:{\"click\":_vm.collect}},[_vm._v(\"收藏\")]),_vm._v(\" \"),_c('el-dropdown',{attrs:{\"trigger\":\"click\"},on:{\"command\":_vm.handleAlbumCommand}},[_c('el-button',{attrs:{\"icon\":\"el-icon-plus\"}},[_vm._v(\"添加到\"),_c('i',{staticClass:\"el-icon-arrow-down el-icon--right\"})]),_vm._v(\" \"),_c('el-dropdown-menu',{attrs:{\"slot\":\"dropdown\",\"data\":_vm.playlistList},slot:\"dropdown\"},[_c('el-dropdown-item',{attrs:{\"command\":\"playqueue\"}},[_vm._v(\"播放队列\")]),_vm._v(\" \"),(_vm.isLogin)?_c('div',[_vm._l((_vm.playlistList),function(playlist){return _c('el-dropdown-item',{key:playlist.id,attrs:{\"command\":{type:\"playlist\",params:playlist.id}}},[_vm._v(_vm._s(playlist.name))])}),_vm._v(\" \"),_c('el-dropdown-item',{attrs:{\"command\":\"newplaylist\",\"divided\":\"\"}},[_vm._v(\"添加到新歌单\")])],2):_c('el-dropdown-item',{attrs:{\"command\":\"login\",\"divided\":\"\"}},[_vm._v(\"登录后添加到歌单\")])],1)],1)],1)])],1),_vm._v(\" \"),_c('el-row',[_c('el-col',{attrs:{\"span\":16,\"offset\":2}},[_c('div',[_c('el-table',{staticClass:\"spHeight\",staticStyle:{\"width\":\"95%\"},attrs:{\"data\":_vm.songList,\"stripe\":true},on:{\"cell-mouse-enter\":_vm.handleMouseEnter,\"cell-mouse-leave\":_vm.handleMouseOut}},[_c('el-table-column',{attrs:{\"type\":\"index\",\"label\":\" \",\"index\":_vm.indexMethod}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"歌曲\",\"width\":\"350\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('router-link',{attrs:{\"to\":{ path: '/user/songdetail', query: { id: scope.row.id }}}},[_c('span',{staticStyle:{\"color\":\"black\",\"cursor\":\"pointer\"},attrs:{\"onmouseover\":\"this.style.color='#31C27C';\",\"onmouseout\":\"this.style.color='black';\"}},[_vm._v(_vm._s(scope.row.name))])])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\" \",\"width\":\"150\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.Flag)?_c('span',[_c('el-button',{attrs:{\"icon\":\"el-icon-caret-right\",\"circle\":\"\"},on:{\"click\":function($event){_vm.playSong(scope.$index)}}})],1):_vm._e(),_vm._v(\" \"),(scope.row.Flag)?_c('span',[_c('el-dropdown',{attrs:{\"trigger\":\"click\",\"placement\":\"bottom-start\"},on:{\"visible-change\":function($event){_vm.handle(scope.row,$event)},\"command\":_vm.handleSongCommand}},[_c('el-button',{attrs:{\"icon\":\"el-icon-plus\",\"circle\":\"\"}}),_vm._v(\" \"),_c('el-dropdown-menu',{attrs:{\"slot\":\"dropdown\",\"data\":_vm.playlistList},slot:\"dropdown\"},[_c('el-dropdown-item',{attrs:{\"command\":{type:\"playqueue\",params:scope.$index}}},[_vm._v(\"播放队列\")]),_vm._v(\" \"),(_vm.isLogin)?_c('div',[_c('el-dropdown-item',{attrs:{\"divided\":\"\",\"command\":{type:\"collect\",params:scope.$index}}},[_vm._v(\"我喜欢\")]),_vm._v(\" \"),_vm._l((_vm.playlistList),function(playlist){return _c('el-dropdown-item',{key:playlist.id,attrs:{\"command\":{type:\"playlist\",param1:playlist.id,param2:scope.row}}},[_vm._v(_vm._s(playlist.name))])}),_vm._v(\" \"),_c('el-dropdown-item',{attrs:{\"command\":{type:\"newplaylist\",params:scope.row},\"divided\":\"\"}},[_vm._v(\"添加到新歌单\")])],2):_c('el-dropdown-item',{attrs:{\"command\":\"login\",\"divided\":\"\"}},[_vm._v(\"登录后添加到歌单\")])],1)],1)],1):_vm._e(),_vm._v(\" \"),(scope.row.Flag)?_c('span',[_c('el-button',{attrs:{\"icon\":\"el-icon-download\",\"circle\":\"\"},on:{\"click\":function($event){_vm.downloadSong(scope.row)}}})],1):_vm._e()]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"歌手\",\"width\":\"150\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('router-link',{attrs:{\"to\":{ path: '/user/artistdetail', query: { id: scope.row.artistId }}}},[_c('span',{staticStyle:{\"color\":\"black\",\"cursor\":\"pointer\"},attrs:{\"onmouseover\":\"this.style.color='#31C27C';\",\"onmouseout\":\"this.style.color='black';\"}},[_vm._v(_vm._s(scope.row.artistName))])])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"duration\",\"label\":\"时长\"}})],1)],1)]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":4}},[_c('div',[(_vm.album.intro)?_c('p',{staticClass:\"font_albumIntro\"},[_vm._v(\"简介\")]):_vm._e(),_vm._v(\" \"),_c('p',{staticClass:\"font_other\",staticStyle:{\"display\":\"-webkit-box\",\"-webkit-box-orient\":\"vertical\",\"-webkit-line-clamp\":\"4\",\"overflow\":\"hidden\"},attrs:{\"id\":\"albumIntro\"}},[_vm._v(_vm._s(_vm.album.intro))]),_vm._v(\" \"),(this.isOverflow)?_c('el-popover',{attrs:{\"placement\":\"left\",\"title\":\"专辑简介\",\"trigger\":\"click\",\"width\":\"500\"}},[_c('p',{staticClass:\"font_other\"},[_vm._v(_vm._s(_vm.album.intro))]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"color\":\"black\"},attrs:{\"slot\":\"reference\",\"type\":\"text\",\"onmouseover\":\"this.style.color='#31C27C';\",\"onmouseout\":\"this.style.color='black';\"},slot:\"reference\"},[_vm._v(\"[更多]\")])],1):_vm._e()],1)])],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"创建歌单\",\"visible\":_vm.dialogVisible,\"width\":\"30%\",\"before-close\":_vm.handleClose},on:{\"update:visible\":function($event){_vm.dialogVisible=$event}}},[_c('el-form',{ref:\"newPlaylist\",attrs:{\"model\":_vm.newPlaylist,\"rules\":_vm.rules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"歌单名称\",\"prop\":\"name\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入歌单名称\"},model:{value:(_vm.newPlaylist.name),callback:function ($$v) {_vm.$set(_vm.newPlaylist, \"name\", $$v)},expression:\"newPlaylist.name\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"歌单简介\",\"prop\":\"intro\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"placeholder\":\"请输入歌单简介\"},model:{value:(_vm.newPlaylist.intro),callback:function ($$v) {_vm.$set(_vm.newPlaylist, \"intro\", $$v)},expression:\"newPlaylist.intro\"}})],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.submitForm}},[_vm._v(\"完成\")]),_vm._v(\" \"),_c('el-button',{on:{\"click\":function($event){_vm.dialogVisible=false}}},[_vm._v(\"取消\")])],1)],1)],1)],1),_vm._v(\" \"),_c('v-foot')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.2@vue-loader/lib/template-compiler?{\"id\":\"data-v-9281978c\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.2@vue-loader/lib/selector.js?type=template&index=0!./src/components/user/page/albumdetail.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-9281978c\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=styles&index=0!./albumdetail.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=script&index=0!./albumdetail.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=script&index=0!./albumdetail.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-9281978c\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=template&index=0!./albumdetail.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/user/page/albumdetail.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}