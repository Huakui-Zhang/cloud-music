{"version":3,"sources":["webpack:///src/components/user/page/rank.vue","webpack:///./src/components/user/page/rank.vue?3063","webpack:///./src/components/user/page/rank.vue","webpack:///./static/images/1.jpg"],"names":["data","index","page","rankType","rankText","songs","pageCount","songsView","dialogVisible","newPlaylist","id","name","intro","info","rules","required","message","trigger","min","max","userID","state","playlistList","components","vNav","navigation","vHeader","header","vFoot","footer","created","window","scrollTo","this","$route","query","undefined","toString","computed","serverUrl","$store","isLogin","mounted","user","Id","rankDisplay","getPlaylistList","methods","indexMethod","pagination","_page","splice","length","i","_songList","push","computePageCount","Math","ceil","parseFloat","handleChange","val","_rankType","_this","axios","get","params","type","isAll","then","res","image","filePath","lyricsPath","$set","catch","error","console","log","submitForm","_this2","$refs","validate","valid","$message","showClose","post","response","thisPlaylist","sessionStorage","setItem","stringify_default","resetFields","addSongToPlaylist","err","addAllSongToPlaylist","playlistId","_this3","albumId","album","songId","_this4","downloadSong","row","_this5","location","href","$confirm","confirmButtonText","cancelButtonText","$router","path","handleSongCommand","command","param2","param1","handleClose","done","_","handleMouseEnter","column","cell","event","Flag","handleMouseOut","isopen","handle","handleRankCommand","dispatch","songList","addToSongList","addAllToSongList","playSong","startIndex","playAllSong","page_rank","render","_vm","_h","$createElement","_c","_self","_v","staticClass","attrs","span","default-active","mode","on","click","$event","gutter","_s","staticStyle","background-color","float","icon","onmouseover","onmouseout","width","max-height","cell-mouse-enter","cell-mouse-leave","prop","label","scopedSlots","_u","key","fn","scope","to","$index","color","cursor","text-decoration","circle","nativeOn","_e","placement","visible-change","slot","playqueue","_l","playlist","divided","login","title","visible","before-close","update:visible","ref","model","label-width","placeholder","value","callback","$$v","expression","artistId","artistName","page-count","layout","current-change","staticRenderFns","Component","__webpack_require__","normalizeComponent","rank","ssrContext","__webpack_exports__","module","exports","p"],"mappings":"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","file":"static/js/5.8c8c3cb420c8c1676f20.js","sourcesContent":["<template>\r\n<div>\r\n    <div>\r\n    <v-header></v-header>\r\n    <v-nav></v-nav>\r\n    </div>\r\n    <el-row>\r\n    <div class=\"rank\">\r\n        <el-col :span=\"6\">\r\n            <div class=\"navMenu\">\r\n                <div class=\"rankTitle\">\r\n                    <h2>排行榜</h2>\r\n                </div>\r\n                <el-menu\r\n                :default-active=index\r\n                class=\"rankMenu\"\r\n                mode=\"vertical\">\r\n                    <el-menu-item index=\"1\" @click=\"rankDisplay(1)\">\r\n                        新歌榜\r\n                    </el-menu-item>\r\n                    <el-menu-item index=\"2\" @click=\"rankDisplay(2);\">\r\n                        热歌榜\r\n                    </el-menu-item>\r\n                    <el-menu-item index=\"3\" @click=\"rankDisplay(3);\">\r\n                        内地榜\r\n                    </el-menu-item>\r\n                    <el-menu-item index=\"4\" @click=\"rankDisplay(4);\">\r\n                        港台榜\r\n                    </el-menu-item>\r\n                    <el-menu-item index=\"5\" @click=\"rankDisplay(5);\">\r\n                        欧美榜\r\n                    </el-menu-item>\r\n                    <el-menu-item index=\"6\" @click=\"rankDisplay(6);\">\r\n                        日韩榜\r\n                    </el-menu-item>\r\n\r\n                </el-menu>\r\n            </div>\r\n        </el-col>\r\n        <el-col :gutter=\"2\" :span=\"16\">\r\n            <div class=\"display\">\r\n                <div class=\"displayTitle\">\r\n                    <h1>{{rankText[rankType - 1]}}</h1>\r\n                </div>\r\n                <div class=\"displaybtn\">\r\n                    <el-button type=\"primary\"\r\n                    icon=\"el-icon-caret-right\" \r\n                    style=\"background-color:#31C27C;float: right;\" \r\n                    onmouseover=\"this.style.backgroundColor='#2CAF6F';\" \r\n                    onmouseout=\"this.style.backgroundColor='#31C27C';\" \r\n                    v-on:click=\"playAllSong\">播放全部</el-button>\r\n                </div>\r\n                <!-- <el-dropdown trigger=\"click\" id=\"dropdown\" @command=\"handleRankCommand\"> -->\r\n <!--                <el-button icon=\"el-icon-plus\" v-on:click=\"getPlaylistList\" >添加到<i class=\"el-icon-arrow-down el-icon--right\"></i>\r\n                </el-button> -->\r\n\r\n<!--                 <el-dropdown-menu slot=\"dropdown\" :data=\"playlistList\">\r\n                    <el-dropdown-item command=\"playqueue\" @click.native =\"addAllToSongList()\">播放队列</el-dropdown-item>\r\n                    <div v-if=\"isLogin\">\r\n                      <el-dropdown-item v-for=\"playlist in playlistList\" :key=\"playlist.id\" :command='{type:\"playlist\",params:playlist.id}'>{{playlist.name}}</el-dropdown-item>\r\n                      <el-dropdown-item command=\"newplaylist\" divided>添加到新歌单</el-dropdown-item>\r\n                    </div>\r\n                    <el-dropdown-item v-else command=\"login\" divided>登录后添加到歌单</el-dropdown-item>\r\n                </el-dropdown-menu> -->\r\n\r\n                <!-- </el-dropdown> -->\r\n\r\n                <el-table\r\n                :data=\"songsView\"\r\n                style=\"width: 100%\"\r\n                max-height=\"1500\"\r\n\r\n                @cell-mouse-enter=\"handleMouseEnter\" \r\n                @cell-mouse-leave=\"handleMouseOut\">\r\n                    <el-table-column prop=\"index\" width=\"50\" type=\"index\" :index=\"indexMethod\"></el-table-column>\r\n                    <el-table-column prop=\"name\" label=\"歌曲\" width=\"300\">\r\n                        <template slot-scope=\"scope\">\r\n                            <router-link :to=\"{path:'/user/songdetail',query:{id:songs[scope.$index+20*(page-1)].id}}\">\r\n                                <el-button type=\"text\" style=\"color:black;cursor:pointer;text-decoration: none\" onmouseover=\"this.style.color='#31C27C';\" onmouseout=\"this.style.color='black';\">{{scope.row.name}}</el-button>\r\n                            </router-link>\r\n                        </template>\r\n                    </el-table-column>\r\n                    \r\n                    <el-table-column label=\" \" width=\"150\" type=\"index\">\r\n                            <template slot-scope=\"scope\">\r\n                                <span v-if=\"scope.row.Flag\">\r\n                                    <el-button icon=\"el-icon-caret-right\" circle @click.native =\"playSong(scope.$index)\"></el-button>\r\n                                </span>\r\n                                <span v-if=\"scope.row.Flag\"> \r\n                                    <el-dropdown trigger=\"click\" placement=\"bottom-start\" @visible-change=\"handle(scope.row,$event)\" @command=\"handleSongCommand\">\r\n                                    <el-button icon=\"el-icon-plus\" circle></el-button>\r\n                                    <el-dropdown-menu slot=\"dropdown\" :data=\"playlistList\">\r\n                                    <el-dropdown-item :command=\"playqueue\" @click.native =\"addToSongList(scope.$index)\">播放队列</el-dropdown-item>\r\n                                    <div v-if=\"isLogin\">\r\n                                        <el-dropdown-item v-for=\"playlist in playlistList\" :key=\"playlist.id\" :command='{type:\"playlist\",param1:playlist.id,param2:scope.row}'>{{playlist.name}}</el-dropdown-item>\r\n                                        <el-dropdown-item :command='{type:\"newplaylist\",params:scope.row}' divided>添加到新歌单</el-dropdown-item>\r\n                                    </div>\r\n                                    <el-dropdown-item v-else :command=\"login\" divided>登录后添加到歌单</el-dropdown-item>\r\n                                    </el-dropdown-menu>\r\n                                    </el-dropdown>\r\n                                </span>\r\n                                <el-dialog title=\"创建歌单\" :visible.sync=\"dialogVisible\" width=\"30%\" :before-close=\"handleClose\">\r\n                                    <el-form :model=\"newPlaylist\" :rules=\"rules\" ref=\"newPlaylist\" label-width=\"100px\">\r\n                                        <el-form-item label=\"歌单名称\" prop=\"name\">\r\n                                            <el-input v-model=\"newPlaylist.name\" placeholder=\"请输入歌单名称\"></el-input>\r\n                                        </el-form-item>\r\n                                        <el-form-item label=\"歌单简介\" prop=\"intro\">\r\n                                            <el-input type=\"textarea\" v-model=\"newPlaylist.intro\" placeholder=\"请输入歌单简介\"></el-input>\r\n                                        </el-form-item>\r\n                                        <el-form-item>\r\n                                            <el-button type=\"primary\" @click=\"submitForm()\">完成</el-button>\r\n                                            <el-button @click=\"dialogVisible=false\">取消</el-button>\r\n                                        </el-form-item>\r\n                                    </el-form>\r\n                                </el-dialog>\r\n                                <span v-if=\"scope.row.Flag\"> \r\n                                    <el-button icon=\"el-icon-download\" circle v-on:click=\"downloadSong(scope.row)\"></el-button> \r\n                                </span>\r\n                        </template>\r\n                    </el-table-column>\r\n\r\n                    <el-table-column prop=\"artist\" label=\"歌手\" width=\"200\">\r\n                        <template slot-scope=\"scope\">            \r\n                            <router-link :to=\"{path:'/user/artistdetail',query:{id:songs[scope.$index+20*(page-1)].artistId}}\">\r\n                                <el-button type=\"text\" style=\"color:black;cursor:pointer;text-decoration:none\" onmouseover=\"this.style.color='#31C27C';\" onmouseout=\"this.style.color='black';\">{{scope.row.artistName}}\r\n                                </el-button>\r\n                            </router-link>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"duration\" label=\"时长\" width=\"100\">\r\n                    </el-table-column>  \r\n                </el-table>\r\n\r\n                <br>\r\n                <el-pagination class=\"pagination\" :page-count=\"pageCount\" \r\n                layout=\"prev, pager, next\" \r\n                @current-change=\"handleChange\"></el-pagination>\r\n                <br>\r\n            </div>\r\n        </el-col>\r\n    </div>\r\n    </el-row>\r\n    <el-row>\r\n        <v-foot></v-foot>\r\n    </el-row>\r\n</div>\r\n</template>\r\n<script>\r\nimport vHeader from \"../common/header.vue\";\r\nimport vNav from \"../common/navigation.vue\";\r\nimport vFoot from \"../common/footer.vue\";\r\nimport a from \"@/../static/images/1.jpg\"\r\nexport default{\r\n    data(){\r\n        return {\r\n            index: 1,\r\n            page:1,\r\n            rankType:1,\r\n            rankText: [\"新歌榜\", \"热歌榜\", \"内地榜\", \"港台榜\", \"欧美榜\", \"日韩榜\"],\r\n            songs:[],\r\n            pageCount: 1,\r\n            songsView: [],\r\n            dialogVisible:false,\r\n            newPlaylist: {\r\n                id:'',\r\n                name: '',\r\n                intro: '',\r\n                info:''\r\n            },\r\n            rules: {\r\n                name: [\r\n                {required: true, message: '请输入歌单名称', trigger: 'blur'},\r\n                {min: 1, max: 20, message: '长度在 1 到 20 个字符', trigger: 'blur'}\r\n                ],\r\n                intro: [\r\n                {min: 1, max: 140, message: '长度在 140 个字符以内', trigger: 'blur' }\r\n                ]\r\n            },\r\n            userID:'',\r\n            state:true,\r\n            playlistList:[],\r\n\r\n        }\r\n    },\r\n    components: {\r\n        vNav,\r\n        vHeader,\r\n        vFoot,\r\n    },\r\n    //在模板渲染成html前调用，显示对应榜单名称\r\n    created(){\r\n        window.scrollTo(0,0);\r\n        var index=this.$route.query.rankType;\r\n        if(index != undefined)\r\n            this.index = index.toString();\r\n    },\r\n    //获取用户登录情况及serverurl\r\n    computed: {\r\n      serverUrl() {\r\n        return this.$store.state.serverUrl;\r\n      },\r\n      isLogin(){\r\n        return this.$store.state.isLogin;\r\n      }\r\n    },\r\n    //在模板渲染成html后调用，获取排行榜及用户歌单列表\r\n    mounted() {\r\n      this.userID = this.$store.state.user.Id;\r\n      this.rankDisplay(this.index);\r\n      this.getPlaylistList();\r\n    },\r\n    methods:{\r\n        /* 获取用户播放列表*/\r\n        getPlaylistList:function(){\r\n            if(this.isLogin){\r\n            this.playlistList=this.$store.state.playlistList;\r\n          }\r\n          else{\r\n            return false;\r\n          }\r\n        },\r\n        //计算索引，避免因为分页后索引总是从1开始的情况\r\n        indexMethod: function(index){\r\n            return (this.page - 1)* 20 + index + 1;\r\n        },\r\n        //按顺序分页显示歌曲排名，一页展示20首，避免因为分页后索引总是从1开始的情况\r\n        pagination: function(_page){\r\n            this.page = _page;\r\n            this.songsView.splice(0,this.songsView.length);\r\n            for(var i = 0; i < 20; i++){\r\n                if(this.songs[((_page - 1)*20) + i] == null){\r\n                } else {\r\n                    var _songList = this.songs[((_page - 1)*20) + i];\r\n                    this.songsView.push(_songList);\r\n                }\r\n            }\r\n            \r\n        },\r\n        //根据歌曲量动态显示分页总数\r\n        computePageCount: function(){\r\n            this.pageCount = Math.ceil(parseFloat(this.songs.length) / 20);\r\n        },\r\n        //控制分页操作\r\n        handleChange: function(val){\r\n            if(val != this.page){\r\n                this.pagination(val);\r\n            }\r\n        },\r\n        //从mounted获取的serverurl请求排行榜有关数据\r\n        rankDisplay: function(_rankType){\r\n            this.rankType = _rankType;\r\n            //get排行榜展示内容数据\r\n            this.axios.get(this.serverUrl + \"/song/rank\", {\r\n                params: {\r\n                    type: _rankType,\r\n                    isAll: true\r\n                }\r\n            })\r\n            .then(res => {\r\n                this.songs = res.data;\r\n                for(var i = 0; i < res.data.length; i++){\r\n                    if(this.songs[i].image == null){\r\n                        this.songs[i].image = required(\"../../../assets/暂无图片.png\");\r\n                    } else {\r\n                        this.songs[i].image = this.serverUrl + this.songs[i].image;\r\n                    }\r\n                    \r\n                    this.songs[i].filePath = this.serverUrl + this.songs[i].filePath;\r\n                    this.songs[i].lyricsPath = this.serverUrl + this.songs[i].lyricsPath;\r\n                    this.$set(this.songs[i],'Flag',false);\r\n                    this.$set(this.songs[i],'isopen',false);\r\n                    // this.songs[i].displayName = (i+1) + \"  \" + this.songs[i].name;\r\n                }\r\n                this.computePageCount();\r\n                this.pagination(1);\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n        },\r\n        //提交playlist对象，包括歌单名称和简介，返回-1用户会话超时\r\n        submitForm:function(){        \r\n            this.$refs[\"newPlaylist\"].validate((valid) => {\r\n                if (valid) {\r\n                this.axios.post(this.serverUrl+'/playlist/create',{\r\n                    name:this.newPlaylist.name,\r\n                    intro:this.newPlaylist.intro\r\n                })\r\n                .then(response =>{\r\n                    if(response.data!=-1){\r\n                    var thisPlaylist={id:response.data,name:this.newPlaylist.name,intro:this.newPlaylist.intro};\r\n                    this.$store.state.playlistList.push(thisPlaylist);\r\n                    sessionStorage.setItem('playlistList', JSON.stringify(this.$store.state.playlistList));\r\n                    this.dialogVisible=false;\r\n                    this.$refs[\"newPlaylist\"].resetFields();\r\n                    this.$message({\r\n                        showClose: true,\r\n                        message: '歌单创建成功',\r\n                        type: 'success'\r\n                    });\r\n                    this.addSongToPlaylist(this.newPlaylist.info,response.data);\r\n\r\n                    }\r\n                    else{\r\n                    this.$message({\r\n                        showClose: true,\r\n                        message: '会话超时',\r\n                        type: 'error'\r\n                    });\r\n                    }\r\n                })\r\n                .catch(function(err){\r\n                    console.log(err);\r\n                });\r\n                } \r\n                else {\r\n                this.$message({\r\n                    showClose: true,\r\n                    message: '格式不正确',\r\n                    type: 'error'\r\n                });\r\n                return false;\r\n                }\r\n            });\r\n        },\r\n        //把排行榜所有歌曲添加到歌单\r\n        addAllSongToPlaylist:function(playlistId){\r\n        this.axios.get(this.serverUrl+'/playlist/addAlbum',{\r\n            params:{\r\n            albumId:this.album.id,\r\n            playlistId:playlistId\r\n            }\r\n        })\r\n        .then(response =>{\r\n            if(response){\r\n            this.$message({\r\n                showClose: true,\r\n                message: '已成功添加到歌单',\r\n                type: 'success'\r\n            });\r\n            }\r\n            else{\r\n            this.$message({\r\n                showClose: true,\r\n                message: '会话超时',\r\n                type: 'error'\r\n            });\r\n            }\r\n        })\r\n        .catch(function(err){\r\n            console.log(err);\r\n        });\r\n        },\r\n        //把歌曲添加到歌单\r\n        addSongToPlaylist:function(songId,playlistId){\r\n        this.axios.get(this.serverUrl+'/playlist/addSong',{\r\n            params:{\r\n            songId:songId,\r\n            playlistId:playlistId\r\n            }\r\n        })\r\n        .then(response =>{\r\n            if(response){\r\n            this.$message({\r\n                showClose: true,\r\n                message: '已成功添加到歌单',\r\n                type: 'success'\r\n            });\r\n            }\r\n            else{\r\n            this.$message({\r\n                showClose: true,\r\n                message: '会话超时',\r\n                type: 'error'\r\n            });\r\n            }\r\n        })\r\n        .catch(function(err){\r\n            console.log(err);\r\n        });\r\n        },\r\n        //下载歌曲，先决条件为用户已登录\r\n        downloadSong:function(row){\r\n            if(this.isLogin){\r\n                window.location.href = this.serverUrl + \"/download/downloadSong?id=\" + row.id;\r\n            } else {\r\n                //询问要不要登录\r\n                this.$confirm('还未登录,是否现在登录?', '提示', {\r\n                  confirmButtonText: '确定',\r\n                  cancelButtonText: '取消',\r\n                }).then(() => {\r\n                  this.$router.push({\r\n                      path: \"/user/unlogin\"\r\n                    })\r\n                }).catch(() => {\r\n                });\r\n            }\r\n        },\r\n        //歌曲添加到：若未登录则只显示添加到播放队列，若已登录则显示添加到用户歌单\r\n        handleSongCommand:function(command){\r\n            if(command==\"login\"){\r\n                this.$router.push({\r\n                  path: \"/user/unlogin\"\r\n                })\r\n            }\r\n            else if(command.type==\"playqueue\"){\r\n                // var song=this.songList[command.params];\r\n                // var songs=[song];\r\n                // this.$store.dispatch(\"addToSongList\",songs);\r\n            }\r\n            else if(command.type==\"newplaylist\"){\r\n                this.dialogVisible=true;\r\n                this.newPlaylist.info=command.params.id;\r\n            }\r\n            else{\r\n                this.addSongToPlaylist(command.param2.id,command.param1);\r\n            }\r\n        },\r\n        //取消操作时的确认框\r\n        handleClose(done) {\r\n            this.$confirm('确认关闭？')\r\n                .then(_ => {\r\n                  done();\r\n                })\r\n                .catch(_ => {});\r\n        },\r\n        //实现鼠标移入时当前行出现播放，添加到，下载按钮的效果\r\n        handleMouseEnter:function(row, column, cell, event){\r\n            // alert(row.id);\r\n            row.Flag=true;\r\n        },\r\n        //实现鼠标移出时当前行播放，添加到，下载按钮的效果失效\r\n        handleMouseOut:function(row, column, cell, event){\r\n            if(!row.isopen){\r\n                row.Flag=false;\r\n            }\r\n            else{\r\n                return false;\r\n            }\r\n        },\r\n        //点击事件触发对应歌曲的事件\r\n        handle:function(row,event){\r\n            row.Flag=event;\r\n            row.isopen=event;\r\n        },\r\n        //排行榜添加到：若未登录则只显示添加到播放队列，若已登录则显示添加到用户歌单\r\n        handleRankCommand:function(command){\r\n            if(command==\"login\"){\r\n                this.$router.push({\r\n                  path: \"/user/unlogin\"\r\n                })\r\n            }\r\n            if(command==\"newplaylist\"){\r\n                this.dialogVisible=true;\r\n                this.newPlaylist.type=\"rank\";\r\n            }\r\n            else if(command==\"playqueue\"){\r\n                this.$store.dispatch(\"addToSongList\", this.songList);\r\n            }\r\n            else{\r\n                this.addAllSongToPlaylist(command.params);\r\n            }\r\n        },\r\n        //歌曲添加到播放队列，调用公共函数addToSongList\r\n        addToSongList: function(index){\r\n            index = (this.page - 1) * 20 + index;\r\n            var song = this.songs[index];\r\n            var songs = [song];\r\n            this.$store.dispatch(\"addToSongList\", songs);\r\n        },\r\n        //添加榜单所有歌曲到播放列表，调用公共函数addToSongList\r\n        addAllToSongList: function(){\r\n            this.$store.dispatch(\"addToSongList\", this.songs);\r\n        },\r\n        //播放歌曲，调用公共函数play\r\n        playSong:function(index){\r\n            //传递歌曲ID给player.vue\r\n            var startIndex = (this.page - 1) * 20 + index;\r\n            this.$store.dispatch(\"play\", [this.songs, startIndex, false]);\r\n        },\r\n        //播放榜单所有歌曲，调用公共函数play\r\n        playAllSong:function(){\r\n            this.$store.dispatch(\"play\", [this.songs, 0, false]);\r\n        },\r\n    },\r\n    \r\n}\r\n</script>\r\n<style>\r\n.navMenu{\r\n    margin-left:100px;\r\n    margin-top:50px;\r\n    margin-bottom:30px;\r\n    height:80%;\r\n    text-align:center;\r\n}\r\n.rankTitle{\r\n    margin-left:8px;\r\n}\r\n.rankMenu{\r\n    margin:0 auto;\r\n}\r\n.pagination{\r\n    color:#31c27c;\r\n    text-align: center;\r\n    font-size: 20px;\r\n}\r\n.display{\r\n    margin-left:50px;\r\n}\r\n.pagination {\r\ntext-align: center;\r\nfont-size: 20px;\r\nmargin:0 auto;\r\n}\r\n.displayTitle{\r\n    margin-left:20px;\r\n    float:left;\r\n\r\n}\r\n.displaybtn{\r\n    float:right;\r\n    margin-top:25px;\r\n    margin-right:70px;\r\n}\r\n.songImg{\r\n  width:30px;\r\n  height:30px;\r\n}\r\n#dropdown{\r\n    margin-left:20px;\r\n}\r\n.a{\r\n    text-decoration:none;\r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/user/page/rank.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',[_c('v-header'),_vm._v(\" \"),_c('v-nav')],1),_vm._v(\" \"),_c('el-row',[_c('div',{staticClass:\"rank\"},[_c('el-col',{attrs:{\"span\":6}},[_c('div',{staticClass:\"navMenu\"},[_c('div',{staticClass:\"rankTitle\"},[_c('h2',[_vm._v(\"排行榜\")])]),_vm._v(\" \"),_c('el-menu',{staticClass:\"rankMenu\",attrs:{\"default-active\":_vm.index,\"mode\":\"vertical\"}},[_c('el-menu-item',{attrs:{\"index\":\"1\"},on:{\"click\":function($event){_vm.rankDisplay(1)}}},[_vm._v(\"\\r\\n                        新歌榜\\r\\n                    \")]),_vm._v(\" \"),_c('el-menu-item',{attrs:{\"index\":\"2\"},on:{\"click\":function($event){_vm.rankDisplay(2);}}},[_vm._v(\"\\r\\n                        热歌榜\\r\\n                    \")]),_vm._v(\" \"),_c('el-menu-item',{attrs:{\"index\":\"3\"},on:{\"click\":function($event){_vm.rankDisplay(3);}}},[_vm._v(\"\\r\\n                        内地榜\\r\\n                    \")]),_vm._v(\" \"),_c('el-menu-item',{attrs:{\"index\":\"4\"},on:{\"click\":function($event){_vm.rankDisplay(4);}}},[_vm._v(\"\\r\\n                        港台榜\\r\\n                    \")]),_vm._v(\" \"),_c('el-menu-item',{attrs:{\"index\":\"5\"},on:{\"click\":function($event){_vm.rankDisplay(5);}}},[_vm._v(\"\\r\\n                        欧美榜\\r\\n                    \")]),_vm._v(\" \"),_c('el-menu-item',{attrs:{\"index\":\"6\"},on:{\"click\":function($event){_vm.rankDisplay(6);}}},[_vm._v(\"\\r\\n                        日韩榜\\r\\n                    \")])],1)],1)]),_vm._v(\" \"),_c('el-col',{attrs:{\"gutter\":2,\"span\":16}},[_c('div',{staticClass:\"display\"},[_c('div',{staticClass:\"displayTitle\"},[_c('h1',[_vm._v(_vm._s(_vm.rankText[_vm.rankType - 1]))])]),_vm._v(\" \"),_c('div',{staticClass:\"displaybtn\"},[_c('el-button',{staticStyle:{\"background-color\":\"#31C27C\",\"float\":\"right\"},attrs:{\"type\":\"primary\",\"icon\":\"el-icon-caret-right\",\"onmouseover\":\"this.style.backgroundColor='#2CAF6F';\",\"onmouseout\":\"this.style.backgroundColor='#31C27C';\"},on:{\"click\":_vm.playAllSong}},[_vm._v(\"播放全部\")])],1),_vm._v(\" \"),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.songsView,\"max-height\":\"1500\"},on:{\"cell-mouse-enter\":_vm.handleMouseEnter,\"cell-mouse-leave\":_vm.handleMouseOut}},[_c('el-table-column',{attrs:{\"prop\":\"index\",\"width\":\"50\",\"type\":\"index\",\"index\":_vm.indexMethod}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"歌曲\",\"width\":\"300\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('router-link',{attrs:{\"to\":{path:'/user/songdetail',query:{id:_vm.songs[scope.$index+20*(_vm.page-1)].id}}}},[_c('el-button',{staticStyle:{\"color\":\"black\",\"cursor\":\"pointer\",\"text-decoration\":\"none\"},attrs:{\"type\":\"text\",\"onmouseover\":\"this.style.color='#31C27C';\",\"onmouseout\":\"this.style.color='black';\"}},[_vm._v(_vm._s(scope.row.name))])],1)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\" \",\"width\":\"150\",\"type\":\"index\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.Flag)?_c('span',[_c('el-button',{attrs:{\"icon\":\"el-icon-caret-right\",\"circle\":\"\"},nativeOn:{\"click\":function($event){_vm.playSong(scope.$index)}}})],1):_vm._e(),_vm._v(\" \"),(scope.row.Flag)?_c('span',[_c('el-dropdown',{attrs:{\"trigger\":\"click\",\"placement\":\"bottom-start\"},on:{\"visible-change\":function($event){_vm.handle(scope.row,$event)},\"command\":_vm.handleSongCommand}},[_c('el-button',{attrs:{\"icon\":\"el-icon-plus\",\"circle\":\"\"}}),_vm._v(\" \"),_c('el-dropdown-menu',{attrs:{\"slot\":\"dropdown\",\"data\":_vm.playlistList},slot:\"dropdown\"},[_c('el-dropdown-item',{attrs:{\"command\":_vm.playqueue},nativeOn:{\"click\":function($event){_vm.addToSongList(scope.$index)}}},[_vm._v(\"播放队列\")]),_vm._v(\" \"),(_vm.isLogin)?_c('div',[_vm._l((_vm.playlistList),function(playlist){return _c('el-dropdown-item',{key:playlist.id,attrs:{\"command\":{type:\"playlist\",param1:playlist.id,param2:scope.row}}},[_vm._v(_vm._s(playlist.name))])}),_vm._v(\" \"),_c('el-dropdown-item',{attrs:{\"command\":{type:\"newplaylist\",params:scope.row},\"divided\":\"\"}},[_vm._v(\"添加到新歌单\")])],2):_c('el-dropdown-item',{attrs:{\"command\":_vm.login,\"divided\":\"\"}},[_vm._v(\"登录后添加到歌单\")])],1)],1)],1):_vm._e(),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"创建歌单\",\"visible\":_vm.dialogVisible,\"width\":\"30%\",\"before-close\":_vm.handleClose},on:{\"update:visible\":function($event){_vm.dialogVisible=$event}}},[_c('el-form',{ref:\"newPlaylist\",attrs:{\"model\":_vm.newPlaylist,\"rules\":_vm.rules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"歌单名称\",\"prop\":\"name\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入歌单名称\"},model:{value:(_vm.newPlaylist.name),callback:function ($$v) {_vm.$set(_vm.newPlaylist, \"name\", $$v)},expression:\"newPlaylist.name\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"歌单简介\",\"prop\":\"intro\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"placeholder\":\"请输入歌单简介\"},model:{value:(_vm.newPlaylist.intro),callback:function ($$v) {_vm.$set(_vm.newPlaylist, \"intro\", $$v)},expression:\"newPlaylist.intro\"}})],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.submitForm()}}},[_vm._v(\"完成\")]),_vm._v(\" \"),_c('el-button',{on:{\"click\":function($event){_vm.dialogVisible=false}}},[_vm._v(\"取消\")])],1)],1)],1),_vm._v(\" \"),(scope.row.Flag)?_c('span',[_c('el-button',{attrs:{\"icon\":\"el-icon-download\",\"circle\":\"\"},on:{\"click\":function($event){_vm.downloadSong(scope.row)}}})],1):_vm._e()]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"artist\",\"label\":\"歌手\",\"width\":\"200\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('router-link',{attrs:{\"to\":{path:'/user/artistdetail',query:{id:_vm.songs[scope.$index+20*(_vm.page-1)].artistId}}}},[_c('el-button',{staticStyle:{\"color\":\"black\",\"cursor\":\"pointer\",\"text-decoration\":\"none\"},attrs:{\"type\":\"text\",\"onmouseover\":\"this.style.color='#31C27C';\",\"onmouseout\":\"this.style.color='black';\"}},[_vm._v(_vm._s(scope.row.artistName)+\"\\r\\n                                \")])],1)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"duration\",\"label\":\"时长\",\"width\":\"100\"}})],1),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('el-pagination',{staticClass:\"pagination\",attrs:{\"page-count\":_vm.pageCount,\"layout\":\"prev, pager, next\"},on:{\"current-change\":_vm.handleChange}}),_vm._v(\" \"),_c('br')],1)])],1)]),_vm._v(\" \"),_c('el-row',[_c('v-foot')],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.2@vue-loader/lib/template-compiler?{\"id\":\"data-v-314901bc\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.2@vue-loader/lib/selector.js?type=template&index=0!./src/components/user/page/rank.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-314901bc\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=styles&index=0!./rank.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=script&index=0!./rank.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=script&index=0!./rank.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-314901bc\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=template&index=0!./rank.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/user/page/rank.vue\n// module id = null\n// module chunks = ","module.exports = __webpack_public_path__ + \"static/img/1.28339a7.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/images/1.jpg\n// module id = d+Yd\n// module chunks = 5"],"sourceRoot":""}