{"version":3,"sources":["webpack:///src/components/user/page/mymusic.vue","webpack:///./src/components/user/page/mymusic.vue?b1ce","webpack:///./src/components/user/page/mymusic.vue","webpack:///./src/assets/我的音乐.jpg"],"names":["mymusic","components","vHead","header","vNav","navigation","vFoot","footer","data","user","id","background","backgroundImage","__webpack_require__","backgroundRepeat","currentPageOfSong","currentPageOfAlbum","currentPageOfPlaylist","dialogVisible","newPlaylist","name","intro","type","info","rules","required","message","trigger","min","max","songList","albumList","playlistList","allSong","allAlbum","allPlaylist","methods","handleClose","done","this","$confirm","then","_","catch","handleMouseEnter","row","column","cell","event","Flag","handleMouseOut","isopen","handle","playAllSong","length","$message","showClose","$store","dispatch","playSong","index","handleSongCommand","command","songs","params","addSongToPlaylist","param2","param1","songId","playlistId","_this","axios","get","serverUrl","response","getMyPlaylist","err","console","log","downloadSong","window","location","href","deleteSong","_this2","splice","state","likeSongs","sessionStorage","setItem","stringify_default","songPaginationChange","playAlbum","_this3","i","image","filePath","lyricsPath","handleAlbumCommand","_this4","addAlbumToPlaylist","albumId","_this5","deleteAlbum","_this6","likeAlbums","albumPaginationChange","playPlaylist","_this7","handlePlaylistCommand","_this8","addPlaylistToPlaylist","fromId","toId","_this9","deletePlaylist","_this10","playlistPaginationChange","submitForm","_this11","$refs","validate","valid","post","thisPlaylist","count","push","Math","floor","resetFields","timestampToTime","timestamp","date","Date","Y","getFullYear","M","getMonth","D","getDate","page","_this12","res","$set","error","getMyMusic","_this13","likeSongList","likeAlbumList","releaseDate","created","scrollTo","computed","mounted","isLogin","$router","page_mymusic","render","_vm","_h","$createElement","_c","_self","staticClass","_v","style","attrs","staticStyle","width","height","src","font-size","color","align","_s","title","visible","before-close","on","update:visible","$event","ref","model","label-width","label","prop","placeholder","value","callback","$$v","expression","click","position","left","bottom","slot","background-color","margin-top","icon","onmouseover","onmouseout","stripe","cell-mouse-enter","cell-mouse-leave","scopedSlots","_u","key","fn","scope","to","path","query","circle","$index","_e","placement","visible-change","_l","playlist","divided","artistId","artistName","albumName","duration","current-page","layout","total","update:currentPage","current-change","clear","staticRenderFns","Component","normalizeComponent","ssrContext","__webpack_exports__","module","exports","p"],"mappings":"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","file":"static/js/6.7887e3058815bbc039a3.js","sourcesContent":["<template>\r\n    <div class=\"wrapper\">\r\n        <v-head></v-head>\r\n            <div :data=\"user\" class=\"background\" :style=\"background\">\r\n                <div style=\"width:100%;height:315px;\">\r\n                    <img :src=\"state.user.image\" class=\"userImage\">\r\n                    <p align=center style=\"font-size: x-large;color:white;\">{{user.name}}</p>\r\n                </div>\r\n                <el-dialog title=\"创建歌单\" :visible.sync=\"dialogVisible\" width=\"30%\" :before-close=\"handleClose\">\r\n                    <el-form :model=\"newPlaylist\" :rules=\"rules\" ref=\"newPlaylist\" label-width=\"100px\">\r\n                        <el-form-item label=\"歌单名称\" prop=\"name\">\r\n                            <el-input v-model=\"newPlaylist.name\" placeholder=\"请输入歌单名称\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"歌单简介\" prop=\"intro\">\r\n                            <el-input type=\"textarea\" v-model=\"newPlaylist.intro\" placeholder=\"请输入歌单简介\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item>\r\n                            <el-button type=\"primary\" @click=\"submitForm\">完成</el-button>\r\n                            <el-button @click=\"dialogVisible=false\">取消</el-button>\r\n                        </el-form-item>\r\n                    </el-form>\r\n                </el-dialog>\r\n                <el-tabs style=\"width:90%;position:relative;left:5%;bottom:-27px;\">\r\n                    <el-tab-pane>\r\n                        <span class=\"tab1\" slot=\"label\">我喜欢</span>\r\n                        <el-tabs style=\"width:100%;\">\r\n                            <el-tab-pane>\r\n                                <span class=\"tab2\" slot=\"label\">歌曲 {{allSong.length}}</span>\r\n                                <div>\r\n                                    <el-button type=\"primary\" icon=\"el-icon-caret-right\" style=\"background-color:#31C27C;margin-top:30px;\" onmouseover=\"this.style.backgroundColor='#2CAF6F';\" onmouseout=\"this.style.backgroundColor='#31C27C';\" v-on:click=\"playAllSong\">播放全部</el-button>\r\n                                    <el-table :data=\"songList\" :stripe=true style=\"width:100%;margin-top: 10px;\" @cell-mouse-enter=\"handleMouseEnter\" @cell-mouse-leave=\"handleMouseOut\" class=\"spHeight\">\r\n                                        <el-table-column label=\"歌曲\" width=60>\r\n                                            <template slot-scope=\"scope\">\r\n                                                <router-link :to=\"{ path: '/user/songdetail', query: { id: scope.row.id }}\">\r\n                                                    <img :src=scope.row.image class=\"smallImage\">\r\n                                                </router-link>\r\n                                            </template>\r\n                                        </el-table-column>\r\n                                        <el-table-column label=\" \" width=350>\r\n                                            <template slot-scope=\"scope\">\r\n                                                <router-link :to=\"{ path: '/user/songdetail', query: { id: scope.row.id }}\">\r\n                                                    <span class=\"font_link\" onmouseover=\"this.style.color='#31C27C';\" onmouseout=\"this.style.color='black';\">{{scope.row.name}}</span>\r\n                                                </router-link>\r\n                                            </template>\r\n                                        </el-table-column>\r\n                                        <el-table-column label=\" \" width=200>\r\n                                            <template slot-scope=\"scope\">\r\n                                                <span v-if=\"scope.row.Flag\"> <el-button icon=\"el-icon-caret-right\" circle v-on:click=\"playSong(scope.$index)\"></el-button> </span>\r\n                                                <span v-if=\"scope.row.Flag\"> \r\n                                                    <el-dropdown trigger=\"click\" placement=\"bottom-start\" @visible-change=\"handle(scope.row,$event)\" @command=\"handleSongCommand\">\r\n                                                        <el-button icon=\"el-icon-plus\" circle></el-button>\r\n                                                        <el-dropdown-menu slot=\"dropdown\" :data=\"allPlaylist\">\r\n                                                            <el-dropdown-item :command='{type:\"playqueue\",params:scope.$index}'>播放队列</el-dropdown-item>\r\n                                                            <el-dropdown-item v-for=\"playlist in allPlaylist\" :key=\"playlist.id\" :command='{type:\"playlist\",param1:playlist.id,param2:scope.row}'>{{playlist.name}}</el-dropdown-item>\r\n                                                            <el-dropdown-item :command='{type:\"newplaylist\",params:scope.row}' divided>添加到新歌单</el-dropdown-item>\r\n                                                        </el-dropdown-menu>\r\n                                                    </el-dropdown>\r\n                                                </span>\r\n                                                <span v-if=\"scope.row.Flag\"> <el-button icon=\"el-icon-download\" circle v-on:click=\"downloadSong(scope.row)\"></el-button></span>\r\n                                            </template>\r\n                                        </el-table-column>\r\n                                        <el-table-column label=\"歌手\" width=240>\r\n                                            <template slot-scope=\"scope\">\r\n                                                <router-link :to=\"{ path: '/user/artistdetail', query: { id: scope.row.artistId }}\">\r\n                                                    <span class=\"font_link\" onmouseover=\"this.style.color='#31C27C';\" onmouseout=\"this.style.color='black';\">{{scope.row.artistName}}</span>\r\n                                                </router-link>\r\n                                            </template>\r\n                                        </el-table-column>\r\n                                        <el-table-column label=\"专辑\" width=240>\r\n                                            <template slot-scope=\"scope\">\r\n                                                <router-link :to=\"{ path: '/user/albumdetail', query: { id: scope.row.albumId }}\">\r\n                                                    <span class=\"font_link\" onmouseover=\"this.style.color='#31C27C';\" onmouseout=\"this.style.color='black';\">{{scope.row.albumName}}</span>\r\n                                                </router-link>\r\n                                            </template>\r\n                                        </el-table-column>\r\n                                        <el-table-column label=\"时长\">\r\n                                            <template slot-scope=\"scope\">\r\n                                                <span v-if=\"scope.row.Flag\"><el-button icon=\"el-icon-delete\" circle v-on:click=\"deleteSong(scope.row,scope.$index)\"></el-button></span>\r\n                                                <span v-else class=\"font_other\">{{scope.row.duration}}</span>\r\n                                            </template>\r\n                                        </el-table-column>\r\n                                    </el-table>\r\n                                    <el-pagination v-if=\"allSong.length>10\" :current-page.sync=currentPageOfSong align=center layout=\"prev, pager, next\" :total=\"allSong.length\" @current-change=\"songPaginationChange\"></el-pagination>\r\n                                </div>\r\n                            </el-tab-pane>\r\n                            <el-tab-pane>\r\n                                <span class=\"tab2\" slot=\"label\">专辑 {{allAlbum.length}}</span>\r\n                                <div>\r\n                                    <el-table :data=\"albumList\" :stripe=true style=\"width: 100%;margin-top:30px;\" @cell-mouse-enter=\"handleMouseEnter\" @cell-mouse-leave=\"handleMouseOut\" class=\"spHeight\">\r\n                                        <el-table-column label=\"专辑\" width=60>\r\n                                            <template slot-scope=\"scope\">\r\n                                                <router-link :to=\"{ path: '/user/albumdetail', query: { id: scope.row.id }}\">\r\n                                                    <img :src=scope.row.image class=\"smallImage\">\r\n                                                </router-link>\r\n                                            </template>\r\n                                        </el-table-column>    \r\n                                        <el-table-column label=\" \">\r\n                                            <template slot-scope=\"scope\" width=350>\r\n                                                <router-link :to=\"{ path: '/user/albumdetail', query: { id: scope.row.id }}\">\r\n                                                    <span class=\"font_link\" onmouseover=\"this.style.color='#31C27C';\" onmouseout=\"this.style.color='black';\">{{scope.row.name}}</span>\r\n                                                </router-link>\r\n                                            </template>\r\n                                        </el-table-column>\r\n                                        <el-table-column label=\" \" width=200>\r\n                                            <template slot-scope=\"scope\">\r\n                                                <span v-if=\"scope.row.Flag\"> <el-button icon=\"el-icon-caret-right\" circle v-on:click=\"playAlbum(scope.row)\"></el-button></span>\r\n                                                <span v-if=\"scope.row.Flag\"> \r\n                                                    <el-dropdown trigger=\"click\" placement=\"bottom-start\" @visible-change=\"handle(scope.row,$event)\" @command=\"handleAlbumCommand\">\r\n                                                        <el-button icon=\"el-icon-plus\" circle></el-button>\r\n                                                        <el-dropdown-menu slot=\"dropdown\" :data=\"allPlaylist\">\r\n                                                            <el-dropdown-item :command='{type:\"playqueue\",params:scope.row}'>播放队列</el-dropdown-item>\r\n                                                            <el-dropdown-item v-for=\"playlist in allPlaylist\" :key=\"playlist.id\" :command='{type:\"playlist\",param1:playlist.id,param2:scope.row}'>{{playlist.name}}</el-dropdown-item>\r\n                                                            <el-dropdown-item :command='{type:\"newplaylist\",params:scope.row}' divided>添加到新歌单</el-dropdown-item>\r\n                                                        </el-dropdown-menu>\r\n                                                    </el-dropdown>\r\n                                                </span>\r\n                                            </template>\r\n                                        </el-table-column>\r\n                                        <el-table-column label=\"曲目数\" width=240>\r\n                                            <template slot-scope=\"scope\">\r\n                                                <span class=\"font_other\">{{scope.row.count}}</span>\r\n                                            </template>\r\n                                        </el-table-column>\r\n                                        <el-table-column label=\"歌手\" width=240>\r\n                                            <template slot-scope=\"scope\">\r\n                                                <router-link :to=\"{ path: '/user/artistdetail', query: { id: scope.row.artistId }}\">\r\n                                                    <span class=\"font_link\" onmouseover=\"this.style.color='#31C27C';\" onmouseout=\"this.style.color='black';\">{{scope.row.artistName}}</span>\r\n                                                </router-link>\r\n                                            </template>\r\n                                        </el-table-column>\r\n                                        <el-table-column label=\"发行时间\">\r\n                                            <template slot-scope=\"scope\">\r\n                                                <span v-if=\"scope.row.Flag\"><el-button icon=\"el-icon-delete\" circle v-on:click=\"deleteAlbum(scope.row,scope.$index)\"></el-button></span>\r\n                                                <span v-else class=\"font_other\">{{scope.row.releaseDate}}</span>\r\n                                            </template>\r\n                                        </el-table-column>\r\n                                    </el-table>\r\n                                    <el-pagination v-if=\"allAlbum.length>10\" :current-page.sync=currentPageOfAlbum align=center layout=\"prev, pager, next\" :total=\"allAlbum.length\" @current-change=\"albumPaginationChange\"></el-pagination>\r\n                                </div>\r\n                            </el-tab-pane>\r\n                        </el-tabs>\r\n                    </el-tab-pane>\r\n                    <el-tab-pane>\r\n                        <span class=\"tab1\" slot=\"label\">我创建的歌单</span>\r\n                        <div>\r\n                            <el-button icon=\"el-icon-plus\" style=\"margin-top:10px;\" v-on:click=\"dialogVisible=true\">新建歌单</el-button>\r\n                            <el-table :data=\"playlistList\" :stripe=true style=\"width: 100%;margin-top:10px;\" @cell-mouse-enter=\"handleMouseEnter\" @cell-mouse-leave=\"handleMouseOut\" class=\"spHeight\">\r\n                                <el-table-column label=\"歌单\" width=60>\r\n                                    <template slot-scope=\"scope\">\r\n                                        <router-link :to=\"{ path: '/user/playlistdetail', query: { id: scope.row.id }}\">\r\n                                            <img :src=scope.row.image class=\"smallImage\">\r\n                                        </router-link>\r\n                                    </template>\r\n                                </el-table-column>    \r\n                                <el-table-column label=\" \" width=400>\r\n                                    <template slot-scope=\"scope\">\r\n                                        <router-link :to=\"{ path: '/user/playlistdetail', query: { id: scope.row.id }}\">\r\n                                            <span class=\"font_link\" onmouseover=\"this.style.color='#31C27C';\" onmouseout=\"this.style.color='black';\">{{scope.row.name}}</span>\r\n                                        </router-link>\r\n                                    </template>\r\n                                </el-table-column>\r\n                                <el-table-column label=\" \" width=200>\r\n                                    <template slot-scope=\"scope\">\r\n                                        <span v-if=\"scope.row.Flag\"> <el-button icon=\"el-icon-caret-right\" circle v-on:click=\"playPlaylist(scope.row)\"></el-button></span>\r\n                                        <span v-if=\"scope.row.Flag\"> \r\n                                            <el-dropdown trigger=\"click\" placement=\"bottom-start\" @visible-change=\"handle(scope.row,$event)\" @command=\"handlePlaylistCommand\">\r\n                                                <el-button icon=\"el-icon-plus\" circle></el-button>\r\n                                                <el-dropdown-menu slot=\"dropdown\" :data=\"allPlaylist\">\r\n                                                    <el-dropdown-item :command='{type:\"playqueue\",params:scope.row}'>播放队列</el-dropdown-item>\r\n                                                    <el-dropdown-item v-for=\"playlist in allPlaylist\" :key=\"playlist.id\" :command='{type:\"playlist\",param1:playlist.id,param2:scope.row}'>{{playlist.name}}</el-dropdown-item>\r\n                                                    <el-dropdown-item :command='{type:\"newplaylist\",params:scope.row}' divided>添加到新歌单</el-dropdown-item>\r\n                                                </el-dropdown-menu>\r\n                                            </el-dropdown>\r\n                                        </span>\r\n                                    </template>\r\n                                </el-table-column>\r\n                                <el-table-column label=\"曲目数\" width=300>\r\n                                    <template slot-scope=\"scope\">\r\n                                        <span class=\"font_other\">{{scope.row.count}}</span>\r\n                                    </template>\r\n                                </el-table-column>\r\n                                <el-table-column label=\" \">\r\n                                    <template slot-scope=\"scope\">\r\n                                        <span v-if=\"scope.row.Flag\"><el-button icon=\"el-icon-delete\" circle v-on:click=\"deletePlaylist(scope.row,scope.$index)\"></el-button></span>\r\n                                    </template>\r\n                                </el-table-column>\r\n                            </el-table>\r\n                            <el-pagination v-if=\"allPlaylist.length>10\" :current-page.sync=currentPageOfPlaylist align=center layout=\"prev, pager, next\" :total=\"allPlaylist.length\" @current-change=\"playlistPaginationChange\"></el-pagination>\r\n                        </div>\r\n                    </el-tab-pane>\r\n                </el-tabs>\r\n                <br style=\"clear:both;\">\r\n                <br style=\"clear:both;\">\r\n            </div>\r\n        <v-foot></v-foot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport vHead from '../common/header.vue'\r\nimport vNav from '../common/navigation.vue'\r\nimport vFoot from '../common/footer.vue'\r\n\r\nexport default {\r\n    components: {\r\n        vHead,\r\n        vNav,\r\n        vFoot\r\n    },\r\n    data(){\r\n        return{\r\n            user:{id:''},\r\n            background:{\r\n            backgroundImage: \"url(\" + require(\"../../../assets/我的音乐.jpg\") + \")\",\r\n            backgroundRepeat: \"no-repeat\",\r\n            },\r\n            currentPageOfSong:1,\r\n            currentPageOfAlbum:1,\r\n            currentPageOfPlaylist:1,\r\n            dialogVisible:false,\r\n            newPlaylist: {\r\n                id:'',\r\n                name: '',\r\n                intro: '',\r\n                type:'',\r\n                info:''\r\n            },\r\n            rules: {\r\n                name: [\r\n                    { required: true, message: '请输入歌单名称', trigger: 'blur' },\r\n                    { min: 1, max: 30, message: '长度在 1 到 30 个字符', trigger: 'blur' }\r\n                ],\r\n                intro: [\r\n                { min: 1, max: 680, message: '长度在 680 个字符以内', trigger: 'blur' }\r\n                ]\r\n            },\r\n            songList:[],\r\n            albumList:[],\r\n            playlistList:[],\r\n            allSong:[],\r\n            allAlbum:[],\r\n            allPlaylist:[],\r\n        }\r\n    },\r\n    methods:{\r\n        //对话框关闭前调用，询问确认关闭\r\n        handleClose(done) {\r\n        this.$confirm('确认关闭？')\r\n        .then(_ => {\r\n          done();\r\n        })\r\n        .catch(_ => {});\r\n        },\r\n        //鼠标移入列表单元格调用，修改那一行的标志\r\n        handleMouseEnter:function(row, column, cell, event){\r\n            row.Flag=true;\r\n        },\r\n        //鼠标移出列表单元格调用，修改那一行的标志\r\n        handleMouseOut:function(row, column, cell, event){\r\n            if(!row.isopen){\r\n                row.Flag=false;}\r\n            else{\r\n                return false;\r\n            }\r\n        },\r\n        //列表里的添加到下拉框显示状态改变调用，修改那一行的标志\r\n        handle:function(row,event){\r\n            row.Flag=event;\r\n            row.isopen=event;\r\n        },\r\n        //点击播放全部按钮调用，播放收藏的歌曲\r\n        playAllSong:function(){\r\n            if(this.allSong.length==0){\r\n                this.$message({\r\n                  showClose: true,\r\n                  message: '还未收藏任何歌曲',\r\n                  type: 'info'\r\n                });\r\n            }\r\n            else{\r\n                this.$store.dispatch(\"play\", [this.allSong, 0, false]);\r\n            }\r\n        },\r\n        //点击歌曲播放按钮调用，播放歌曲\r\n        playSong:function(index){\r\n            index = (this.currentPageOfSong - 1) * 10 + index;\r\n            this.$store.dispatch(\"play\", [this.songList, index, false]);\r\n        },\r\n        //点击歌曲列表里添加到中的一项调用，处理添加到按钮的不同请求\r\n        handleSongCommand:function(command){\r\n          if(command.type==\"playqueue\"){\r\n            var song=this.songList[command.params];\r\n            var songs=[song];\r\n            this.$store.dispatch(\"addToSongList\",songs);\r\n          }\r\n          else if(command.type==\"newplaylist\"){\r\n            this.dialogVisible=true;\r\n            this.newPlaylist.type=\"song\";\r\n            this.newPlaylist.info=command.params.id;\r\n          }\r\n          else{\r\n            this.addSongToPlaylist(command.param2.id,command.param1);\r\n          }\r\n        },\r\n        //把歌曲添加到歌单\r\n        addSongToPlaylist:function(songId,playlistId){\r\n          this.axios.get(this.serverUrl+'/playlist/addSong',{\r\n              params:{\r\n                songId:songId,\r\n                playlistId:playlistId\r\n              }\r\n            })\r\n            .then(response =>{\r\n              if(response){\r\n                this.getMyPlaylist(1);\r\n                this.$message({\r\n                  showClose: true,\r\n                  message: '已成功添加到歌单',\r\n                  type: 'success'\r\n                });\r\n              }\r\n              else{\r\n                this.$message({\r\n                  showClose: true,\r\n                  message: '会话超时',\r\n                  type: 'error'\r\n                });\r\n              }\r\n            })\r\n            .catch(function(err){\r\n              console.log(err);\r\n            });\r\n        },\r\n        //点击歌曲下载按钮调用，下载歌曲\r\n        downloadSong:function(row){\r\n            window.location.href = this.serverUrl + \"/download/downloadSong?id=\" + row.id;\r\n        },\r\n        //点击歌曲删除按钮调用，删除歌曲\r\n        deleteSong:function(row,index){\r\n            this.$confirm('确认删除？')\r\n            .then(_ => {\r\n                this.axios.get(this.serverUrl+'/user/unlikeSong',{\r\n                  params:{\r\n                    songId:row.id\r\n                }\r\n            })\r\n                .then(response =>{\r\n                  if(response){\r\n                    this.allSong.splice((this.currentPageOfSong-1)*10+index,1);\r\n                    this.state.likeSongs=this.allSong;\r\n                    sessionStorage.setItem('likeSongs', JSON.stringify(this.state.likeSongs));\r\n                    if(this.songList.length==1){\r\n                        this.songPaginationChange(this.currentPageOfSong-1);\r\n                    }\r\n                    else{\r\n                        this.songPaginationChange(this.currentPageOfSong);\r\n                    }\r\n                    this.$message({\r\n                      showClose: true,\r\n                      message: '歌曲已被取消收藏',\r\n                      type: 'success'\r\n                  });\r\n                }\r\n                else{\r\n                    this.$message({\r\n                      showClose: true,\r\n                      message: '会话超时',\r\n                      type: 'error'\r\n                  });\r\n                }\r\n            })\r\n                .catch(function(err){\r\n                  console.log(err);\r\n              });\r\n            })\r\n            .catch(_ => {});\r\n        },\r\n        //点击专辑播放按钮调用，播放专辑\r\n        playAlbum:function(row){\r\n            this.axios.get(this.serverUrl+'/album/getSongsFromAlbum',{\r\n              params:{\r\n                id:row.id,\r\n              }\r\n            })\r\n            .then(response =>{\r\n                var songs = response.data;\r\n                for(var i = 0; i < songs.length; i++){\r\n                    songs[i].image = this.serverUrl + songs[i].image;\r\n                    songs[i].filePath = this.serverUrl + songs[i].filePath;\r\n                    songs[i].lyricsPath = this.serverUrl + songs[i].lyricsPath;\r\n                }\r\n                this.$store.dispatch(\"play\", [songs, 0, false]); \r\n            })\r\n            .catch(function(err){\r\n              console.log(err);\r\n            });\r\n        },\r\n        //点击专辑添加到按钮中的一项调用，处理添加到按钮的不同请求\r\n        handleAlbumCommand:function(command){\r\n          if(command.type==\"playqueue\"){\r\n            this.axios.get(this.serverUrl+'/album/getSongsFromAlbum',{\r\n              params:{\r\n                id:command.params.id,\r\n              }\r\n            })\r\n            .then(response =>{\r\n                var songs = response.data;\r\n                for(var i = 0; i < songs.length; i++){\r\n                    songs[i].image = this.serverUrl + songs[i].image;\r\n                    songs[i].filePath = this.serverUrl + songs[i].filePath;\r\n                    songs[i].lyricsPath = this.serverUrl + songs[i].lyricsPath;\r\n                }\r\n                this.$store.dispatch(\"addToSongList\", songs); \r\n            })\r\n            .catch(function(err){\r\n              console.log(err);\r\n            });\r\n          }\r\n          else if(command.type==\"newplaylist\"){\r\n            this.dialogVisible=true;\r\n            this.newPlaylist.type=\"album\";\r\n            this.newPlaylist.info=command.params.id;\r\n          }\r\n          else{\r\n            this.addAlbumToPlaylist(command.param2.id,command.param1);\r\n          }\r\n        },\r\n        //把专辑添加到歌单\r\n        addAlbumToPlaylist:function(albumId,playlistId){\r\n          this.axios.get(this.serverUrl+'/playlist/addAlbum',{\r\n              params:{\r\n                albumId:albumId,\r\n                playlistId:playlistId\r\n              }\r\n            })\r\n            .then(response =>{\r\n              if(response){\r\n                this.getMyPlaylist(1);\r\n                this.$message({\r\n                  showClose: true,\r\n                  message: '已成功添加到歌单',\r\n                  type: 'success'\r\n                });\r\n              }\r\n              else{\r\n                this.$message({\r\n                  showClose: true,\r\n                  message: '会话超时',\r\n                  type: 'error'\r\n                });\r\n              }\r\n            })\r\n            .catch(function(err){\r\n              console.log(err);\r\n            });\r\n        },\r\n        //点击专辑删除按钮调用，删除专辑\r\n        deleteAlbum:function(row,index){\r\n            this.$confirm('确认删除？')\r\n            .then(_ => {\r\n                this.axios.get(this.serverUrl+'/user/unlikeAlbum',{\r\n                  params:{\r\n                    albumId:row.id\r\n                  }\r\n                })\r\n                .then(response =>{\r\n                  if(response){\r\n                    this.allAlbum.splice((this.currentPageOfAlbum-1)*10+index,1);\r\n                    this.state.likeAlbums=this.allAlbum;\r\n                    sessionStorage.setItem('likeAlbums', JSON.stringify(this.state.likeAlbums));\r\n                    if(this.albumList.length==1){\r\n                        this.albumPaginationChange(this.currentPageOfAlbum-1);\r\n                    }\r\n                    else{\r\n                        this.albumPaginationChange(this.currentPageOfAlbum);\r\n                    }\r\n                    this.$message({\r\n                      showClose: true,\r\n                      message: '专辑已被取消收藏',\r\n                      type: 'success'\r\n                  });\r\n                }\r\n                else{\r\n                    this.$message({\r\n                      showClose: true,\r\n                      message: '会话超时',\r\n                      type: 'error'\r\n                  });\r\n                }\r\n            })\r\n                .catch(function(err){\r\n                  console.log(err);\r\n              });\r\n\r\n            })\r\n            .catch(_ => {});\r\n        },\r\n        //点击歌单播放按钮调用，播放歌单\r\n        playPlaylist:function(row){\r\n          this.axios.get(this.serverUrl+'/playlist/getSongs',{\r\n              params:{\r\n                id:row.id,\r\n              }\r\n            })\r\n            .then(response =>{\r\n                var songs = response.data;\r\n                if(songs.length==0){\r\n                    this.$message({\r\n                      showClose: true,\r\n                      message: '歌单里还没有任何歌曲',\r\n                      type: 'info'\r\n                    });\r\n                    return false;\r\n                }\r\n                for(var i = 0; i < songs.length; i++){\r\n                    songs[i].image = this.serverUrl + songs[i].image;\r\n                    songs[i].filePath = this.serverUrl + songs[i].filePath;\r\n                    songs[i].lyricsPath = this.serverUrl + songs[i].lyricsPath;\r\n                }\r\n                this.$store.dispatch(\"play\", [songs,0,false]); \r\n            })\r\n            .catch(function(err){\r\n              console.log(err);\r\n            });\r\n        },\r\n        //点击歌单列表里的添加到按钮中的一项调用，处理添加到按钮的不同请求\r\n        handlePlaylistCommand:function(command){\r\n          if(command.type==\"playqueue\"){\r\n            this.axios.get(this.serverUrl+'/playlist/getSongs',{\r\n              params:{\r\n                id:command.params.id,\r\n              }\r\n            })\r\n            .then(response =>{\r\n                var songs = response.data;\r\n                for(var i = 0; i < songs.length; i++){\r\n                    songs[i].image = this.serverUrl + songs[i].image;\r\n                    songs[i].filePath = this.serverUrl + songs[i].filePath;\r\n                    songs[i].lyricsPath = this.serverUrl + songs[i].lyricsPath;\r\n                }\r\n                this.$store.dispatch(\"addToSongList\", songs); \r\n            })\r\n            .catch(function(err){\r\n              console.log(err);\r\n            });\r\n          }\r\n          else if(command.type==\"newplaylist\"){\r\n            this.dialogVisible=true;\r\n            this.newPlaylist.type=\"playlist\";\r\n            this.newPlaylist.info=command.params.id;\r\n          }\r\n          else{\r\n            this.addPlaylistToPlaylist(command.param2.id,command.param1);\r\n          }\r\n        },\r\n        //把歌单添加到歌单\r\n        addPlaylistToPlaylist:function(fromId,toId){\r\n            this.axios.get(this.serverUrl+'/playlist/addPlaylistToPlaylist',{\r\n              params:{\r\n                fromId:fromId,\r\n                toId:toId\r\n              }\r\n            })\r\n            .then(response =>{\r\n              if(response){\r\n                this.$message({\r\n                  showClose: true,\r\n                  message: '已成功添加到歌单',\r\n                  type: 'success'\r\n                });\r\n              }\r\n              else{\r\n                this.$message({\r\n                  showClose: true,\r\n                  message: '会话超时',\r\n                  type: 'error'\r\n                });\r\n              }\r\n            })\r\n            .catch(function(err){\r\n              console.log(err);\r\n            });\r\n        },\r\n        //点击歌单删除按钮调用，删除歌单\r\n        deletePlaylist:function(row,index){\r\n            this.$confirm('确认删除？')\r\n            .then(_ => {\r\n                this.axios.get(this.serverUrl+'/playlist/remove',{\r\n              params:{\r\n                id:row.id\r\n              }\r\n            })\r\n            .then(response =>{\r\n              if(response){\r\n                this.allPlaylist.splice((this.currentPageOfPlaylist-1)*10+index,1);\r\n                this.state.playlistList=this.allPlaylist;\r\n                sessionStorage.setItem('playlistList', JSON.stringify(this.state.playlistList));\r\n                if(this.playlistList.length==1){\r\n                    this.playlistPaginationChange(this.currentPageOfPlaylist-1);\r\n                }\r\n                else{\r\n                    this.playlistPaginationChange(this.currentPageOfPlaylist);\r\n                }\r\n                this.$message({\r\n                  showClose: true,\r\n                  message: '删除歌单成功',\r\n                  type: 'success'\r\n                });\r\n              }\r\n              else{\r\n                this.$message({\r\n                  showClose: true,\r\n                  message: '会话超时',\r\n                  type: 'error'\r\n                });\r\n              }\r\n            })\r\n            .catch(function(err){\r\n              console.log(err);\r\n            });\r\n            })\r\n            .catch(_ => {});\r\n        },\r\n        //点击表单完成按钮调用，提交新建歌单的表单\r\n        submitForm:function(){\r\n          this.$refs[\"newPlaylist\"].validate((valid) => {\r\n            if (valid) {\r\n              this.axios.post(this.serverUrl+'/playlist/create',{\r\n                name:this.newPlaylist.name,\r\n                intro:this.newPlaylist.intro\r\n              })\r\n              .then(response =>{\r\n                if(response.data!=-1){\r\n                  this.$message({\r\n                    showClose: true,\r\n                    message: '歌单创建成功',\r\n                    type: 'success'\r\n                  });\r\n                  if(this.newPlaylist.type==''){\r\n                    var thisPlaylist={id:response.data,name:this.newPlaylist.name,intro:this.newPlaylist.intro,image:require('../../../assets/暂无图片.png'),count:0,Flag:false,isopen:false}\r\n                    this.allPlaylist.push(thisPlaylist);\r\n                    this.state.playlistList=this.allPlaylist;\r\n                    sessionStorage.setItem('playlistList', JSON.stringify(this.state.playlistList));\r\n                    this.playlistPaginationChange(Math.floor((this.allPlaylist.length-1)/10)+1);\r\n                  }\r\n                  else if(this.newPlaylist.type==\"song\"){\r\n                    this.addSongToPlaylist(this.newPlaylist.info,response.data);\r\n                  }\r\n                  else if(this.newPlaylist.type==\"album\"){\r\n                    this.addAlbumToPlaylist(this.newPlaylist.info,response.data);\r\n                  }\r\n                  else{\r\n                    this.addPlaylistToPlaylist(this.newPlaylist.info,response.data);\r\n                    this.getMyPlaylist(Math.floor((this.allPlaylist.length-1)/10)+1);\r\n                  }\r\n                  this.dialogVisible=false;\r\n                  this.$refs[\"newPlaylist\"].resetFields();\r\n                }\r\n                else{\r\n                  this.$message({\r\n                    showClose: true,\r\n                    message: '会话超时',\r\n                    type: 'error'\r\n                  });\r\n                }\r\n              })\r\n              .catch(function(err){\r\n                console.log(err);\r\n              });\r\n            } \r\n            else {\r\n              this.$message({\r\n                showClose: true,\r\n                message: '格式不正确',\r\n                type: 'error'\r\n              });\r\n              return false;\r\n            }\r\n          });\r\n        },\r\n        //将时间戳变成固定格式时间\r\n        timestampToTime: function(timestamp) {\r\n          var date = new Date(timestamp);//时间戳为10位需*1000，时间戳为13位的话不需乘1000\r\n          var Y = date.getFullYear() + '-';\r\n          var M = (date.getMonth()+1 < 10 ? '0'+(date.getMonth()+1) : date.getMonth()+1) + '-';\r\n          var D = date.getDate();\r\n          if(D < 10) D = '0' + D;\r\n          return Y+M+D;\r\n        },\r\n        //从后台获取用户歌单\r\n        getMyPlaylist:function(page){\r\n            this.axios.get(this.serverUrl + \"/user/showMyMusic\", {\r\n                params: {\r\n                    id: this.user.id\r\n                }\r\n            })\r\n            .then(res => {\r\n                this.user = res.data;\r\n                if(this.user.image==null){\r\n                    this.user.image=require('../../../assets/暂无图片.png');\r\n                }\r\n                else{\r\n                    this.user.image = this.serverUrl + this.user.image;\r\n                }\r\n                this.allPlaylist=this.user.playlistList;\r\n                for(var i=0;i<this.allPlaylist.length;i++){\r\n                    if(this.allPlaylist[i].image==null){\r\n                        this.allPlaylist[i].image=require('../../../assets/暂无图片.png');\r\n                    }\r\n                    else{\r\n                        this.allPlaylist[i].image=this.serverUrl+this.allPlaylist[i].image;\r\n                    }\r\n                    this.$set(this.allPlaylist[i],'Flag',false);\r\n                    this.$set(this.allPlaylist[i],'isopen',false);\r\n                }\r\n                this.state.playlistList=this.allPlaylist;\r\n                sessionStorage.setItem('playlistList', JSON.stringify(this.state.playlistList));\r\n                this.playlistPaginationChange(page);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n        },\r\n        //从后台获取用户我的音乐里的所有信息\r\n        getMyMusic:function(){\r\n            this.axios.get(this.serverUrl + \"/user/showMyMusic\", {\r\n                params: {\r\n                    id: this.user.id\r\n                }\r\n            })\r\n            .then(res => {\r\n                this.user = res.data;\r\n                if(this.user.image==null){\r\n                    this.user.image=require('../../../assets/暂无图片.png');\r\n                }\r\n                else{\r\n                    this.user.image = this.serverUrl + this.user.image;\r\n                }\r\n                this.allSong=this.user.likeSongList;\r\n                this.allAlbum = this.user.likeAlbumList;\r\n                this.allPlaylist=this.user.playlistList;\r\n                for(var i=0;i<this.allSong.length;i++){\r\n                    if(this.allSong[i].image==null){\r\n                        this.allSong[i].image=require('../../../assets/暂无图片.png');\r\n                    }\r\n                    else{\r\n                        this.allSong[i].image=this.serverUrl+this.allSong[i].image;\r\n                    }\r\n                    this.allSong[i].filePath=this.serverUrl+this.allSong[i].filePath;\r\n                    this.allSong[i].lyricsPath=this.serverUrl+this.allSong[i].lyricsPath;\r\n                    this.$set(this.allSong[i],'Flag',false);\r\n                    this.$set(this.allSong[i],'isopen',false);\r\n                }\r\n                for(var i=0;i<this.allAlbum.length;i++){\r\n                    if(this.allAlbum[i].image==null){\r\n                        this.allAlbum[i].image=require('../../../assets/暂无图片.png');\r\n                    }\r\n                    else{\r\n                        this.allAlbum[i].image=this.serverUrl+this.allAlbum[i].image;\r\n                    }\r\n                    this.allAlbum[i].releaseDate=this.timestampToTime(this.allAlbum[i].releaseDate);\r\n                    this.$set(this.allAlbum[i],'Flag',false);\r\n                    this.$set(this.allAlbum[i],'isopen',false);\r\n                }\r\n                for(var i=0;i<this.allPlaylist.length;i++){\r\n                    if(this.allPlaylist[i].image==null){\r\n                        this.allPlaylist[i].image=require('../../../assets/暂无图片.png');\r\n                    }\r\n                    else{\r\n                        this.allPlaylist[i].image=this.serverUrl+this.allPlaylist[i].image;\r\n                    }\r\n                    this.$set(this.allPlaylist[i],'Flag',false);\r\n                    this.$set(this.allPlaylist[i],'isopen',false);\r\n                }\r\n                this.songPaginationChange(1);\r\n                this.albumPaginationChange(1);\r\n                this.playlistPaginationChange(1);\r\n                this.state.likeSongs=this.allSong;\r\n                this.state.likeAlbums=this.allAlbum;\r\n                this.state.playlistList=this.allPlaylist;\r\n                sessionStorage.setItem('likeSongs', JSON.stringify(this.state.likeSongs));\r\n                sessionStorage.setItem('likeAlbums', JSON.stringify(this.state.likeAlbums));\r\n                sessionStorage.setItem('playlistList', JSON.stringify(this.state.playlistList));\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n        },\r\n        //收藏歌曲页码变动调用，换页\r\n        songPaginationChange:function(page){\r\n            this.songList=[];\r\n            if(this.allSong.length==0){\r\n                return false;\r\n            }\r\n            else{\r\n                this.currentPageOfSong=page;\r\n                if(page==Math.floor((this.allSong.length-1)/10)+1){\r\n                    for(var i=10*(page-1);i<this.allSong.length;i++){\r\n                        this.songList.push(this.allSong[i]);\r\n                    }\r\n                }\r\n                else{\r\n                    for(var i=10*(page-1);i<10*page;i++){\r\n                        this.songList.push(this.allSong[i]);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        //收藏专辑页码变动调用，换页\r\n        albumPaginationChange:function(page){\r\n            this.albumList=[];\r\n            if(this.allAlbum.length==0){\r\n                return false;\r\n            }\r\n            else{\r\n                this.currentPageOfAlbum=page;\r\n                if(page==Math.floor((this.allAlbum.length-1)/10)+1){\r\n                    for(var i=10*(page-1);i<this.allAlbum.length;i++){\r\n                        this.albumList.push(this.allAlbum[i]);\r\n                    }\r\n                }\r\n                else{\r\n                    for(var i=10*(page-1);i<10*page;i++){\r\n                        this.albumList.push(this.allAlbum[i]);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        //歌单页码变动调用，换页\r\n        playlistPaginationChange:function(page){\r\n            this.playlistList=[];\r\n            if(this.allPlaylist.length==0){\r\n                return false;\r\n            }\r\n            else{\r\n                this.currentPageOfPlaylist=page;\r\n                if(page==Math.floor((this.allPlaylist.length-1)/10)+1){\r\n                    for(var i=10*(page-1);i<this.allPlaylist.length;i++){\r\n                        this.playlistList.push(this.allPlaylist[i]);\r\n                    }\r\n                }\r\n                else{\r\n                    for(var i=10*(page-1);i<10*page;i++){\r\n                        this.playlistList.push(this.allPlaylist[i]);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n    },\r\n    //vue的created生命周期\r\n    created(){\r\n        window.scrollTo(0,0);\r\n    },\r\n    //从state.js获取常用参数\r\n    computed:{\r\n        serverUrl(){\r\n          return this.$store.state.serverUrl;\r\n        },\r\n        state(){\r\n          return this.$store.state;\r\n        },\r\n\r\n    },\r\n    //vue的mounted生命周期，获取用户信息\r\n    mounted(){\r\n        if(this.state.isLogin){\r\n            this.user.id=this.state.user.id;\r\n            this.getMyMusic();\r\n        }\r\n        else{\r\n            this.$router.push('/user/unlogin');\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.spHeight td{\r\n  height:70px;\r\n}\r\n.background{\r\n\twidth:100%;\r\n\theight:auto;\r\n}\r\n.userImage{\r\n    width:150px;\r\n    height:150px;\r\n\tborder-radius:100%;\r\n\tmargin-top:80px;\r\n\tmargin-left:45%;\r\n}\r\n.smallImage{\r\n    width:50px;\r\n    height:50px;\r\n    display:block;\r\n}\r\n.tab1{\r\n    color:white;\r\n    font-size: large;\r\n}\r\n.tab2{\r\n    color:black;\r\n    font-size: large;\r\n}\r\n.font_link{\r\n    font-family:\"Hiragino Sans GB\";\r\n    font-size: small;\r\n    color:black;\r\n    cursor:pointer;\r\n}\r\n.font_other{\r\n    font-family:\"Hiragino Sans GB\";\r\n    font-size: small;\r\n    color:black;\r\n}\r\na {\r\n     text-decoration:none;\r\n     out-line: none;\r\n  }\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/user/page/mymusic.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wrapper\"},[_c('v-head'),_vm._v(\" \"),_c('div',{staticClass:\"background\",style:(_vm.background),attrs:{\"data\":_vm.user}},[_c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"315px\"}},[_c('img',{staticClass:\"userImage\",attrs:{\"src\":_vm.state.user.image}}),_vm._v(\" \"),_c('p',{staticStyle:{\"font-size\":\"x-large\",\"color\":\"white\"},attrs:{\"align\":\"center\"}},[_vm._v(_vm._s(_vm.user.name))])]),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"创建歌单\",\"visible\":_vm.dialogVisible,\"width\":\"30%\",\"before-close\":_vm.handleClose},on:{\"update:visible\":function($event){_vm.dialogVisible=$event}}},[_c('el-form',{ref:\"newPlaylist\",attrs:{\"model\":_vm.newPlaylist,\"rules\":_vm.rules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"歌单名称\",\"prop\":\"name\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入歌单名称\"},model:{value:(_vm.newPlaylist.name),callback:function ($$v) {_vm.$set(_vm.newPlaylist, \"name\", $$v)},expression:\"newPlaylist.name\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"歌单简介\",\"prop\":\"intro\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"placeholder\":\"请输入歌单简介\"},model:{value:(_vm.newPlaylist.intro),callback:function ($$v) {_vm.$set(_vm.newPlaylist, \"intro\", $$v)},expression:\"newPlaylist.intro\"}})],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.submitForm}},[_vm._v(\"完成\")]),_vm._v(\" \"),_c('el-button',{on:{\"click\":function($event){_vm.dialogVisible=false}}},[_vm._v(\"取消\")])],1)],1)],1),_vm._v(\" \"),_c('el-tabs',{staticStyle:{\"width\":\"90%\",\"position\":\"relative\",\"left\":\"5%\",\"bottom\":\"-27px\"}},[_c('el-tab-pane',[_c('span',{staticClass:\"tab1\",attrs:{\"slot\":\"label\"},slot:\"label\"},[_vm._v(\"我喜欢\")]),_vm._v(\" \"),_c('el-tabs',{staticStyle:{\"width\":\"100%\"}},[_c('el-tab-pane',[_c('span',{staticClass:\"tab2\",attrs:{\"slot\":\"label\"},slot:\"label\"},[_vm._v(\"歌曲 \"+_vm._s(_vm.allSong.length))]),_vm._v(\" \"),_c('div',[_c('el-button',{staticStyle:{\"background-color\":\"#31C27C\",\"margin-top\":\"30px\"},attrs:{\"type\":\"primary\",\"icon\":\"el-icon-caret-right\",\"onmouseover\":\"this.style.backgroundColor='#2CAF6F';\",\"onmouseout\":\"this.style.backgroundColor='#31C27C';\"},on:{\"click\":_vm.playAllSong}},[_vm._v(\"播放全部\")]),_vm._v(\" \"),_c('el-table',{staticClass:\"spHeight\",staticStyle:{\"width\":\"100%\",\"margin-top\":\"10px\"},attrs:{\"data\":_vm.songList,\"stripe\":true},on:{\"cell-mouse-enter\":_vm.handleMouseEnter,\"cell-mouse-leave\":_vm.handleMouseOut}},[_c('el-table-column',{attrs:{\"label\":\"歌曲\",\"width\":\"60\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('router-link',{attrs:{\"to\":{ path: '/user/songdetail', query: { id: scope.row.id }}}},[_c('img',{staticClass:\"smallImage\",attrs:{\"src\":scope.row.image}})])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\" \",\"width\":\"350\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('router-link',{attrs:{\"to\":{ path: '/user/songdetail', query: { id: scope.row.id }}}},[_c('span',{staticClass:\"font_link\",attrs:{\"onmouseover\":\"this.style.color='#31C27C';\",\"onmouseout\":\"this.style.color='black';\"}},[_vm._v(_vm._s(scope.row.name))])])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\" \",\"width\":\"200\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.Flag)?_c('span',[_c('el-button',{attrs:{\"icon\":\"el-icon-caret-right\",\"circle\":\"\"},on:{\"click\":function($event){_vm.playSong(scope.$index)}}})],1):_vm._e(),_vm._v(\" \"),(scope.row.Flag)?_c('span',[_c('el-dropdown',{attrs:{\"trigger\":\"click\",\"placement\":\"bottom-start\"},on:{\"visible-change\":function($event){_vm.handle(scope.row,$event)},\"command\":_vm.handleSongCommand}},[_c('el-button',{attrs:{\"icon\":\"el-icon-plus\",\"circle\":\"\"}}),_vm._v(\" \"),_c('el-dropdown-menu',{attrs:{\"slot\":\"dropdown\",\"data\":_vm.allPlaylist},slot:\"dropdown\"},[_c('el-dropdown-item',{attrs:{\"command\":{type:\"playqueue\",params:scope.$index}}},[_vm._v(\"播放队列\")]),_vm._v(\" \"),_vm._l((_vm.allPlaylist),function(playlist){return _c('el-dropdown-item',{key:playlist.id,attrs:{\"command\":{type:\"playlist\",param1:playlist.id,param2:scope.row}}},[_vm._v(_vm._s(playlist.name))])}),_vm._v(\" \"),_c('el-dropdown-item',{attrs:{\"command\":{type:\"newplaylist\",params:scope.row},\"divided\":\"\"}},[_vm._v(\"添加到新歌单\")])],2)],1)],1):_vm._e(),_vm._v(\" \"),(scope.row.Flag)?_c('span',[_c('el-button',{attrs:{\"icon\":\"el-icon-download\",\"circle\":\"\"},on:{\"click\":function($event){_vm.downloadSong(scope.row)}}})],1):_vm._e()]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"歌手\",\"width\":\"240\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('router-link',{attrs:{\"to\":{ path: '/user/artistdetail', query: { id: scope.row.artistId }}}},[_c('span',{staticClass:\"font_link\",attrs:{\"onmouseover\":\"this.style.color='#31C27C';\",\"onmouseout\":\"this.style.color='black';\"}},[_vm._v(_vm._s(scope.row.artistName))])])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"专辑\",\"width\":\"240\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('router-link',{attrs:{\"to\":{ path: '/user/albumdetail', query: { id: scope.row.albumId }}}},[_c('span',{staticClass:\"font_link\",attrs:{\"onmouseover\":\"this.style.color='#31C27C';\",\"onmouseout\":\"this.style.color='black';\"}},[_vm._v(_vm._s(scope.row.albumName))])])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"时长\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.Flag)?_c('span',[_c('el-button',{attrs:{\"icon\":\"el-icon-delete\",\"circle\":\"\"},on:{\"click\":function($event){_vm.deleteSong(scope.row,scope.$index)}}})],1):_c('span',{staticClass:\"font_other\"},[_vm._v(_vm._s(scope.row.duration))])]}}])})],1),_vm._v(\" \"),(_vm.allSong.length>10)?_c('el-pagination',{attrs:{\"current-page\":_vm.currentPageOfSong,\"align\":\"center\",\"layout\":\"prev, pager, next\",\"total\":_vm.allSong.length},on:{\"update:currentPage\":function($event){_vm.currentPageOfSong=$event},\"current-change\":_vm.songPaginationChange}}):_vm._e()],1)]),_vm._v(\" \"),_c('el-tab-pane',[_c('span',{staticClass:\"tab2\",attrs:{\"slot\":\"label\"},slot:\"label\"},[_vm._v(\"专辑 \"+_vm._s(_vm.allAlbum.length))]),_vm._v(\" \"),_c('div',[_c('el-table',{staticClass:\"spHeight\",staticStyle:{\"width\":\"100%\",\"margin-top\":\"30px\"},attrs:{\"data\":_vm.albumList,\"stripe\":true},on:{\"cell-mouse-enter\":_vm.handleMouseEnter,\"cell-mouse-leave\":_vm.handleMouseOut}},[_c('el-table-column',{attrs:{\"label\":\"专辑\",\"width\":\"60\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('router-link',{attrs:{\"to\":{ path: '/user/albumdetail', query: { id: scope.row.id }}}},[_c('img',{staticClass:\"smallImage\",attrs:{\"src\":scope.row.image}})])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\" \"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('router-link',{attrs:{\"to\":{ path: '/user/albumdetail', query: { id: scope.row.id }}}},[_c('span',{staticClass:\"font_link\",attrs:{\"onmouseover\":\"this.style.color='#31C27C';\",\"onmouseout\":\"this.style.color='black';\"}},[_vm._v(_vm._s(scope.row.name))])])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\" \",\"width\":\"200\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.Flag)?_c('span',[_c('el-button',{attrs:{\"icon\":\"el-icon-caret-right\",\"circle\":\"\"},on:{\"click\":function($event){_vm.playAlbum(scope.row)}}})],1):_vm._e(),_vm._v(\" \"),(scope.row.Flag)?_c('span',[_c('el-dropdown',{attrs:{\"trigger\":\"click\",\"placement\":\"bottom-start\"},on:{\"visible-change\":function($event){_vm.handle(scope.row,$event)},\"command\":_vm.handleAlbumCommand}},[_c('el-button',{attrs:{\"icon\":\"el-icon-plus\",\"circle\":\"\"}}),_vm._v(\" \"),_c('el-dropdown-menu',{attrs:{\"slot\":\"dropdown\",\"data\":_vm.allPlaylist},slot:\"dropdown\"},[_c('el-dropdown-item',{attrs:{\"command\":{type:\"playqueue\",params:scope.row}}},[_vm._v(\"播放队列\")]),_vm._v(\" \"),_vm._l((_vm.allPlaylist),function(playlist){return _c('el-dropdown-item',{key:playlist.id,attrs:{\"command\":{type:\"playlist\",param1:playlist.id,param2:scope.row}}},[_vm._v(_vm._s(playlist.name))])}),_vm._v(\" \"),_c('el-dropdown-item',{attrs:{\"command\":{type:\"newplaylist\",params:scope.row},\"divided\":\"\"}},[_vm._v(\"添加到新歌单\")])],2)],1)],1):_vm._e()]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"曲目数\",\"width\":\"240\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{staticClass:\"font_other\"},[_vm._v(_vm._s(scope.row.count))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"歌手\",\"width\":\"240\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('router-link',{attrs:{\"to\":{ path: '/user/artistdetail', query: { id: scope.row.artistId }}}},[_c('span',{staticClass:\"font_link\",attrs:{\"onmouseover\":\"this.style.color='#31C27C';\",\"onmouseout\":\"this.style.color='black';\"}},[_vm._v(_vm._s(scope.row.artistName))])])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"发行时间\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.Flag)?_c('span',[_c('el-button',{attrs:{\"icon\":\"el-icon-delete\",\"circle\":\"\"},on:{\"click\":function($event){_vm.deleteAlbum(scope.row,scope.$index)}}})],1):_c('span',{staticClass:\"font_other\"},[_vm._v(_vm._s(scope.row.releaseDate))])]}}])})],1),_vm._v(\" \"),(_vm.allAlbum.length>10)?_c('el-pagination',{attrs:{\"current-page\":_vm.currentPageOfAlbum,\"align\":\"center\",\"layout\":\"prev, pager, next\",\"total\":_vm.allAlbum.length},on:{\"update:currentPage\":function($event){_vm.currentPageOfAlbum=$event},\"current-change\":_vm.albumPaginationChange}}):_vm._e()],1)])],1)],1),_vm._v(\" \"),_c('el-tab-pane',[_c('span',{staticClass:\"tab1\",attrs:{\"slot\":\"label\"},slot:\"label\"},[_vm._v(\"我创建的歌单\")]),_vm._v(\" \"),_c('div',[_c('el-button',{staticStyle:{\"margin-top\":\"10px\"},attrs:{\"icon\":\"el-icon-plus\"},on:{\"click\":function($event){_vm.dialogVisible=true}}},[_vm._v(\"新建歌单\")]),_vm._v(\" \"),_c('el-table',{staticClass:\"spHeight\",staticStyle:{\"width\":\"100%\",\"margin-top\":\"10px\"},attrs:{\"data\":_vm.playlistList,\"stripe\":true},on:{\"cell-mouse-enter\":_vm.handleMouseEnter,\"cell-mouse-leave\":_vm.handleMouseOut}},[_c('el-table-column',{attrs:{\"label\":\"歌单\",\"width\":\"60\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('router-link',{attrs:{\"to\":{ path: '/user/playlistdetail', query: { id: scope.row.id }}}},[_c('img',{staticClass:\"smallImage\",attrs:{\"src\":scope.row.image}})])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\" \",\"width\":\"400\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('router-link',{attrs:{\"to\":{ path: '/user/playlistdetail', query: { id: scope.row.id }}}},[_c('span',{staticClass:\"font_link\",attrs:{\"onmouseover\":\"this.style.color='#31C27C';\",\"onmouseout\":\"this.style.color='black';\"}},[_vm._v(_vm._s(scope.row.name))])])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\" \",\"width\":\"200\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.Flag)?_c('span',[_c('el-button',{attrs:{\"icon\":\"el-icon-caret-right\",\"circle\":\"\"},on:{\"click\":function($event){_vm.playPlaylist(scope.row)}}})],1):_vm._e(),_vm._v(\" \"),(scope.row.Flag)?_c('span',[_c('el-dropdown',{attrs:{\"trigger\":\"click\",\"placement\":\"bottom-start\"},on:{\"visible-change\":function($event){_vm.handle(scope.row,$event)},\"command\":_vm.handlePlaylistCommand}},[_c('el-button',{attrs:{\"icon\":\"el-icon-plus\",\"circle\":\"\"}}),_vm._v(\" \"),_c('el-dropdown-menu',{attrs:{\"slot\":\"dropdown\",\"data\":_vm.allPlaylist},slot:\"dropdown\"},[_c('el-dropdown-item',{attrs:{\"command\":{type:\"playqueue\",params:scope.row}}},[_vm._v(\"播放队列\")]),_vm._v(\" \"),_vm._l((_vm.allPlaylist),function(playlist){return _c('el-dropdown-item',{key:playlist.id,attrs:{\"command\":{type:\"playlist\",param1:playlist.id,param2:scope.row}}},[_vm._v(_vm._s(playlist.name))])}),_vm._v(\" \"),_c('el-dropdown-item',{attrs:{\"command\":{type:\"newplaylist\",params:scope.row},\"divided\":\"\"}},[_vm._v(\"添加到新歌单\")])],2)],1)],1):_vm._e()]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"曲目数\",\"width\":\"300\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{staticClass:\"font_other\"},[_vm._v(_vm._s(scope.row.count))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\" \"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.Flag)?_c('span',[_c('el-button',{attrs:{\"icon\":\"el-icon-delete\",\"circle\":\"\"},on:{\"click\":function($event){_vm.deletePlaylist(scope.row,scope.$index)}}})],1):_vm._e()]}}])})],1),_vm._v(\" \"),(_vm.allPlaylist.length>10)?_c('el-pagination',{attrs:{\"current-page\":_vm.currentPageOfPlaylist,\"align\":\"center\",\"layout\":\"prev, pager, next\",\"total\":_vm.allPlaylist.length},on:{\"update:currentPage\":function($event){_vm.currentPageOfPlaylist=$event},\"current-change\":_vm.playlistPaginationChange}}):_vm._e()],1)])],1),_vm._v(\" \"),_c('br',{staticStyle:{\"clear\":\"both\"}}),_vm._v(\" \"),_c('br',{staticStyle:{\"clear\":\"both\"}})],1),_vm._v(\" \"),_c('v-foot')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.2@vue-loader/lib/template-compiler?{\"id\":\"data-v-222871cb\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.2@vue-loader/lib/selector.js?type=template&index=0!./src/components/user/page/mymusic.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-222871cb\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=styles&index=0!./mymusic.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=script&index=0!./mymusic.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=script&index=0!./mymusic.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-222871cb\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=template&index=0!./mymusic.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/user/page/mymusic.vue\n// module id = null\n// module chunks = ","module.exports = __webpack_public_path__ + \"static/img/我的音乐.f992c29.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/我的音乐.jpg\n// module id = lkCq\n// module chunks = 6"],"sourceRoot":""}