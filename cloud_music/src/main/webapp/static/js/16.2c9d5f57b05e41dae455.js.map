{"version":3,"sources":["webpack:///src/components/user/page/playlistdetail.vue","webpack:///./src/components/user/page/playlistdetail.vue?e782","webpack:///./src/components/user/page/playlistdetail.vue"],"names":["components","vHeader","header","vFoot","footer","data","id","playlist","index","songsView","playlistSongList","isOverflow","dialogVisible","editDialogVisible","dialogImageUrl","notDelete","page","pageCount","rules","name","required","message","trigger","min","max","intro","newPlaylist","type","info","ruleForm","image","playlistList","hasChangeImage","computed","serverUrl","this","$store","state","isLogin","created","window","scrollTo","$route","query","mounted","getPlaylistIntro","pagination","computePageCount","getPlaylistList","updated","handleOverflow","methods","indexMethod","offsetWidth","document","getElementById","scrollWidth","playAllSong","dispatch","handlePlaylistCommand","command","location","href","addAllToSongList","addPlaylistToPlaylist","param1","toId","_this","axios","get","params","fromId","then","response","$message","showClose","catch","err","console","log","handleMouseEnter","row","column","cell","event","Flag","handleMouseOut","isopen","handle","handleSongCommand","addSongToPlaylist","param2","songId","playlistId","_this2","handleClose","done","$confirm","_","downloadSong","confirmButtonText","cancelButtonText","_this3","_____default","a","songList","i","length","filePath","lyricsPath","$set","submitForm","_this4","$refs","validate","valid","$nextTick","uploadImage","submit","post","resetFields","handleChange","val","_page","splice","_songList","push","Math","ceil","parseFloat","addToSongList","songs","playSong","startIndex","deleteSong","_this5","editImage","file","filelist","beforeAvatarUpload","url","handleAvatarSuccess","alert","isType","isLt2M","size","error","createPlaylist","_this6","thisPlaylist","sessionStorage","setItem","stringify_default","clickOnEdit","cancelEdit","_this7","uploadFail","fileList","page_playlistdetail","render","_vm","_h","$createElement","_c","_self","_v","staticClass","attrs","span","offset","staticStyle","width","height","margin-top","src","onerror","_s","display","-webkit-box-orient","-webkit-line-clamp","overflow","float","placement","title","color","margin-left","padding-top","slot","onmouseover","onmouseout","_e","icon","on","click","ref","model","value","callback","$$v","expression","label-width","label","prop","placeholder","action","auto-upload","list-type","show-file-list","on-change","on-success","on-error","accept","alt","$event","_l","key","divided","max-height","cell-mouse-enter","cell-mouse-leave","scopedSlots","_u","fn","scope","to","path","$index","cursor","text-decoration","circle","visible-change","nativeOn","visible","before-close","update:visible","artistId","artistName","albumId","albumName","duration","text-align","page-count","layout","current-change","staticRenderFns","Component","__webpack_require__","normalizeComponent","playlistdetail","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/16.2c9d5f57b05e41dae455.js","sourcesContent":["<template>\r\n    <div>\r\n        <v-header></v-header>\r\n    <div class=\"playlistDetail\" :data=\"playlist\">\r\n        <el-row>\r\n            <div class=\"playlistInfo\">\r\n                <el-col :span=\"5\" :offset=\"4\">\r\n                    <div>\r\n                        <img style=\"width:230px;height:230px;margin-top:20px;\" :src=\"playlist.image\" onerror=\"this.style.display='none'\">\r\n                    </div>\r\n                </el-col>\r\n                <el-col :span=\"10\">\r\n                    <div>\r\n                        <div class=\"intro\">\r\n                            <h2>{{playlist.name}}</h2>\r\n                            <p>简介</p>\r\n                            <p id=\"playlistIntro\" style=\"width: 500px; display: -webkit-box;-webkit-box-orient: vertical;-webkit-line-clamp: 1;overflow: hidden; float: left; margin-top: 0px;\">{{playlist.intro}}</p>\r\n                            <el-popover v-if=\"this.isOverflow\" placement=\"left\" title=\"简介\" trigger=\"click\" style=\"float: left;\">\r\n                                <p class=\"font_des\" style=\"width: 600px\">{{playlist.intro}}</p>\r\n                                <el-button type=\"text\" slot=\"reference\" style=\"color: black; margin-left: 20px; padding-top: 15px;\" onmouseover=\"this.style.color='#31C27C';\" onmouseout=\"this.style.color='black';\">[更多]</el-button>\r\n                            </el-popover>\r\n                        </div>  \r\n\r\n                        <el-button class=\"btn2\" type=\"primary\" icon=\"el-icon-caret-right\" v-on:click=\"playAllSong\">播放全部</el-button>\r\n\r\n                        <el-popover\r\n                        ref=\"\"\r\n                        placement=\"right\" width=\"500\"\r\n                        trigger=\"click\"\r\n                        v-model=\"editDialogVisible\">\r\n                            <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\">\r\n                                <el-form-item label=\"歌单名称\" prop=\"name\">\r\n                                    <el-input v-model=\"ruleForm.name\" placeholder=\"请输入歌单名称\"></el-input>\r\n                                </el-form-item>\r\n                                <el-form-item label=\"歌单简介\" prop=\"intro\">\r\n                                    <el-input type=\"textarea\" v-model=\"ruleForm.intro\" placeholder=\"请输入歌单简介\"></el-input>\r\n                                </el-form-item>\r\n                                <el-form-item label=\"上传图片\" prop=\"image\">\r\n                                    <el-upload\r\n                                    class=\"avatar-uploader\"\r\n                                    ref=\"uploadImage\"\r\n                                    action=\"/hifive/upload/uploadPlaylistImage\"\r\n                                    :auto-upload=\"false\"\r\n                                    list-type=\"picture-card\"\r\n                                    :show-file-list=\"false\"\r\n                                    :data={id:ruleForm.id} \r\n                                    :on-change=\"editImage\"\r\n                                    :on-success=\"handleAvatarSuccess\"\r\n                                    :on-error=\"uploadFail\"\r\n                                    accept=\".jpg, .jpeg, .png\">\r\n                                    <img v-if=\"ruleForm.image\" style=\"width:150px;height:150px\" :src=\"ruleForm.image\" alt=\"\">\r\n                                    <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n                                    </el-upload>\r\n                               \r\n                                </el-form-item>\r\n                                <el-form-item>\r\n                                    <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">完成</el-button>\r\n                                    <el-button @click=\"cancelEdit\">取消</el-button>\r\n                                </el-form-item>\r\n                            </el-form>\r\n\r\n                            <el-button class=\"btn2\" slot=\"reference\" v-on:click=\"clickOnEdit\">编辑歌单</el-button>\r\n                        </el-popover>\r\n\r\n                        <el-dropdown trigger=\"click\" @command=\"handlePlaylistCommand\">\r\n                            <el-button class=\"btn2\" icon=\"el-icon-plus\">添加到<i class=\"el-icon-arrow-down el-icon--right\"></i>\r\n                            </el-button>\r\n                            <el-dropdown-menu slot=\"dropdown\" :data=\"playlistList\">\r\n                                <el-dropdown-item :command='{type:\"playqueue\"}'>播放队列</el-dropdown-item>\r\n                                <div v-if=\"isLogin\">\r\n                                    <el-dropdown-item v-for=\"playlist in playlistList\" :key=\"playlist.id\" \r\n                                    :command='{type:\"playlist\",param1:playlist.id}'>{{playlist.name}}</el-dropdown-item>\r\n                                    <el-dropdown-item :command='{type:\"newplaylist\"}' divided>添加到新歌单</el-dropdown-item>\r\n                                </div>\r\n                                <el-dropdown-item v-else :command='{type:\"login\"}' divided>登录后添加到歌单</el-dropdown-item>\r\n                            </el-dropdown-menu>\r\n                        </el-dropdown>\r\n                    </div>\r\n                </el-col>\r\n            </div>\r\n        </el-row>\r\n        <el-row>\r\n            <el-col :span=\"15.5\" :offset=\"4\">\r\n            <div class=\"playlistSongList\">\r\n                <el-table :data=\"songsView\" \r\n                max-height=\"1350\"\r\n                @cell-mouse-enter=\"handleMouseEnter\" \r\n                @cell-mouse-leave=\"handleMouseOut\"               \r\n                class=\"songTable\">\r\n                    <el-table-column type=\"index\" label=\" \" :index=\"indexMethod\"></el-table-column>\r\n                    <el-table-column label=\"歌曲\" width=\"200\">\r\n                        <template slot-scope=\"scope\">\r\n                        <router-link :to=\"{ path: '/user/songdetail', query: {id:playlistSongList[scope.$index].id}}\">\r\n                            <el-button type=\"text\" style=\"color:black;cursor:pointer;text-decoration:none\" \r\n                            onmouseover=\"this.style.color='#31C27C';\" onmouseout=\"this.style.color='black';\">{{scope.row.name}}</el-button>\r\n                        </router-link>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column label=\" \" width=\"200\" type=\"index\">\r\n                        <template slot-scope=\"scope\">\r\n                            <span v-if=\"scope.row.Flag\"> <el-button icon=\"el-icon-caret-right\" circle \r\n                            v-on:click=\"playSong(scope.$index)\"></el-button> </span>\r\n                            <span v-if=\"scope.row.Flag\"> \r\n                                <el-dropdown trigger=\"click\" placement=\"bottom-start\" \r\n                                @visible-change=\"handle(scope.row,$event)\" @command=\"handleSongCommand\">\r\n                                    <el-button icon=\"el-icon-plus\" circle></el-button>\r\n                                    <el-dropdown-menu slot=\"dropdown\" :data=\"playlistList\">\r\n                                        <el-dropdown-item :command='{type:\"playqueue\"}' @click.native =\"addToSongList(scope.$index)\">播放队列</el-dropdown-item>\r\n                                        <div v-if=\"isLogin\">\r\n                                            <el-dropdown-item v-for=\"playlist in playlistList\" :key=\"playlist.id\" \r\n                                            :command='{type:\"playlist\",param1:playlist.id,param2:scope.row}'>{{playlist.name}}</el-dropdown-item>\r\n                                            <el-dropdown-item :command='{type:\"newplaylist\",params:scope.row}' divided>添加到新歌单</el-dropdown-item>\r\n                                        </div>\r\n                                        <el-dropdown-item v-else :command='{type:\"login\"}' divided>登录后添加到歌单</el-dropdown-item>\r\n                                    </el-dropdown-menu>\r\n                                </el-dropdown>\r\n                            </span>\r\n                            <el-dialog title=\"创建歌单\" :visible.sync=\"dialogVisible\" width=\"30%\" :before-close=\"handleClose\">\r\n                                <el-form :model=\"newPlaylist\" :rules=\"rules\" ref=\"newPlaylist\" label-width=\"100px\">\r\n                                    <el-form-item label=\"歌单名称\" prop=\"name\">\r\n                                        <el-input v-model=\"newPlaylist.name\" placeholder=\"请输入歌单名称\"></el-input>\r\n                                    </el-form-item>\r\n                                    <el-form-item label=\"歌单简介\" prop=\"intro\">\r\n                                        <el-input type=\"textarea\" v-model=\"newPlaylist.intro\" placeholder=\"请输入歌单简介\"></el-input>\r\n                                    </el-form-item>\r\n                                    <el-form-item>\r\n                                        <el-button type=\"primary\" @click=\"createPlaylist\">完成</el-button>\r\n                                        <el-button @click=\"dialogVisible=false\">取消</el-button>\r\n                                    </el-form-item>\r\n                                </el-form>\r\n                            </el-dialog>\r\n                            <span v-if=\"scope.row.Flag\"> <el-button icon=\"el-icon-download\" circle \r\n                            v-on:click=\"downloadSong(scope.row)\"></el-button> </span>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column label=\"歌手\" width=\"150\">\r\n                        <template slot-scope=\"scope\">\r\n                        <router-link :to=\"{ path: '/user/artistdetail', query: {id:playlistSongList[scope.$index].artistId }}\">\r\n                            <el-button type=\"text\" style=\"color:black;cursor:pointer;text-decoration:none\"\r\n                            onmouseover=\"this.style.color='#31C27C';\" onmouseout=\"this.style.color='black';\">{{scope.row.artistName}}</el-button>\r\n                        </router-link>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column label=\"专辑\" width=\"150\">\r\n                        <template slot-scope=\"scope\">\r\n                        <router-link :to=\"{ path: '/user/albumdetail', query: { id: scope.row.albumId }}\">\r\n                            <el-button type=\"text\" style=\"color:black;cursor:pointer;text-decoration:none\"\r\n                            onmouseover=\"this.style.color='#31C27C';\" onmouseout=\"this.style.color='black';\">{{scope.row.albumName}}</el-button>\r\n                        </router-link>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column label=\"时长\">\r\n                        <template slot-scope=\"scope\">\r\n                            <span v-if=\"scope.row.Flag\"><el-button icon=\"el-icon-delete\" circle v-on:click=\"deleteSong(scope.row,scope.$index)\"></el-button></span>\r\n                            <span v-else class=\"font_other\">{{scope.row.duration}}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table>\r\n                <br>\r\n\r\n                <br>\r\n            </div>\r\n        </el-col>\r\n        </el-row>\r\n        <el-row>\r\n            <el-col :span=\"15\" :offset=\"4\" style=\"text-align: center\">\r\n                <el-pagination class=\"pagination\" :page-count=\"pageCount\" \r\n                layout=\"prev, pager, next\" \r\n                @current-change=\"handleChange\"></el-pagination>\r\n            </el-col>\r\n        </el-row>\r\n    </div>\r\n\r\n        <v-foot></v-foot>\r\n    </div>\r\n</template>\r\n    \r\n<script>\r\n  import vHeader from \"../common/header.vue\";\r\n  import vNav from \"../common/navigation.vue\";\r\n  import vFoot from \"../common/footer.vue\";\r\n  import emptyImage from '../../../assets/暂无图片.png'\r\nexport default {\r\n   components: {\r\n      vHeader,\r\n      vFoot\r\n    },\r\n    data(){\r\n        return{\r\n            id:'',\r\n            playlist:{},\r\n            index:1,\r\n            songsView:[],\r\n            playlistSongList: [],\r\n            isOverflow:'',\r\n            dialogVisible:false,\r\n            editDialogVisible:false,\r\n            dialogImageUrl: '',\r\n            notDelete:false,\r\n            page: 1,\r\n            pageCount: 1,\r\n            rules: {\r\n                name: [\r\n                { required: true, message: '请输入歌单名称', trigger: 'blur' },\r\n                { min: 1, max: 20, message: '长度在 1 到 20 个字符', trigger: 'blur' }\r\n                ],\r\n                intro: [\r\n                { min: 1, max: 680, message: '长度在 680 个字符以内', trigger: 'blur' }\r\n                ]\r\n            },\r\n            newPlaylist: {\r\n                id:'',\r\n                name: '',\r\n                intro: '',\r\n                type:'',\r\n                info:''\r\n            },\r\n            ruleForm: {\r\n                id: '',\r\n                name: '',\r\n                intro: '',\r\n                image:'',\r\n            },\r\n            playlistList:[],\r\n            hasChangeImage: false,\r\n        }\r\n    },\r\n    //获取用户登录情况及serverurl\r\n    computed: {\r\n      serverUrl() {\r\n        return this.$store.state.serverUrl;\r\n      },\r\n      isLogin(){\r\n        return this.$store.state.isLogin;\r\n      }\r\n    },\r\n    //在模板渲染成html前调用，获取歌单简介实际长度及当前用户id\r\n    created() {\r\n      window.scrollTo(0,0);\r\n      this.id = this.$route.query.id;\r\n    },\r\n    //在模板渲染成html后调用，获取用户歌单信息，分页，歌单列表\r\n    mounted() {\r\n        this.getPlaylistIntro();\r\n        this.pagination(1);\r\n        this.computePageCount();\r\n        this.getPlaylistList();       \r\n    },\r\n    //由于数据更改导致虚拟 DOM 重新渲染，在这之后调用。在这里是编辑歌单后数据更改，调用handleOverflow函数\r\n    updated(){\r\n        this.handleOverflow();\r\n    },\r\n    methods: {\r\n        //计算索引，避免因为分页后索引总是从1开始的情况\r\n        indexMethod(index) {\r\n            return (this.page - 1)* 20 + index + 1;\r\n        },\r\n        //判断歌单简介是否过长超出限制高度\r\n        handleOverflow:function(){\r\n            var offsetWidth = document.getElementById(\"playlistIntro\").offsetWidth;  \r\n            var scrollWidth = document.getElementById(\"playlistIntro\").scrollWidth;\r\n            if (offsetWidth < scrollWidth) {\r\n                this.isOverflow=true;\r\n            }\r\n            else{\r\n                this.isOverflow=false;\r\n            }\r\n        },\r\n        //播放歌单所有歌曲，调用公共函数play\r\n        playAllSong:function(){\r\n            //传递歌曲id给player\r\n            this.$store.dispatch(\"play\", [this.playlistSongList, 0, false]);\r\n        },\r\n        //歌单添加到：若未登录则只显示添加到播放队列，若已登录则显示添加到用户歌单\r\n        handlePlaylistCommand:function(command){\r\n          if(command.type==\"login\"){\r\n            window.location.href='/';\r\n          }\r\n          else if(command.type==\"newplaylist\"){\r\n            this.dialogVisible=true;\r\n            this.newPlaylist.type=\"playlist\";\r\n          }\r\n          else if(command.type==\"playqueue\"){\r\n            //传递所有歌曲id给player.vue\r\n            this.addAllToSongList();\r\n          }\r\n          else{\r\n            this.addPlaylistToPlaylist(command.param1);\r\n          }\r\n        },\r\n        //歌单所有歌曲添加到歌单\r\n        addPlaylistToPlaylist:function(toId){           \r\n            this.axios.get(this.serverUrl+'/playlist/addPlaylistToPlaylist',{\r\n              params:{\r\n                fromId:this.playlist.id,\r\n                toId:toId\r\n              }\r\n            })\r\n            .then(response =>{\r\n              if(response){\r\n                this.getPlaylistList();\r\n                this.$message({\r\n                  showClose: true,\r\n                  message: '已成功添加到歌单',\r\n                  type: 'success'\r\n                });\r\n              }\r\n              else{\r\n                this.$message({\r\n                  showClose: true,\r\n                  message: '会话超时',\r\n                  type: 'error'\r\n                });\r\n              }\r\n            })\r\n            .catch(function(err){\r\n              console.log(err);\r\n            });\r\n        },\r\n        //实现鼠标移入时当前行出现播放，添加到，下载，删除按钮的效果\r\n        handleMouseEnter:function(row, column, cell, event){\r\n            row.Flag=true;\r\n        },\r\n        //实现鼠标移出时当前行播放，添加到，下载，删除按钮的效果失效\r\n        handleMouseOut:function(row, column, cell, event){\r\n            if(!row.isopen){\r\n            row.Flag=false;}\r\n            else{\r\n                return false;\r\n            }\r\n        },\r\n        //点击事件触发对应歌曲的事件\r\n        handle:function(row,event){\r\n          row.Flag=event;\r\n          row.isopen=event;\r\n        },\r\n        //歌曲添加到：若未登录则只显示添加到播放队列，若已登录则显示添加到用户歌单\r\n        handleSongCommand:function(command){\r\n            if(command.type==\"login\"){\r\n                window.location.href='/';\r\n            }\r\n            else if(command.type==\"newplaylist\"){\r\n                this.dialogVisible=true;\r\n                this.newPlaylist.type=\"song\";\r\n                this.newPlaylist.info=command.params.id;\r\n            }\r\n            else if(command.type==\"playqueue\"){\r\n                //传递歌曲id给player.vue\r\n            }\r\n            else{\r\n                this.addSongToPlaylist(command.param2.id,command.param1);\r\n            }\r\n        },\r\n        //歌曲添加到歌单\r\n        addSongToPlaylist:function(songId,playlistId){\r\n          this.axios.get(this.serverUrl+'/playlist/addSong',{\r\n              params:{\r\n                songId:songId,\r\n                playlistId:playlistId\r\n              }\r\n            })\r\n            .then(response =>{\r\n              if(response){\r\n                this.$message({\r\n                  showClose: true,\r\n                  message: '已成功添加到歌单',\r\n                  type: 'success'\r\n                });\r\n              }\r\n              else{\r\n                this.$message({\r\n                  showClose: true,\r\n                  message: '会话超时',\r\n                  type: 'error'\r\n                });\r\n              }\r\n            })\r\n            .catch(function(err){\r\n              console.log(err);\r\n            });\r\n        },\r\n        //取消时的确认框\r\n        handleClose(done) {\r\n            this.$confirm('确认关闭？')\r\n            .then(_ => {\r\n            done();\r\n            })\r\n            .catch(_ => {});\r\n        },\r\n        //下载歌曲，先决条件为用户已登录\r\n        downloadSong:function(row){\r\n            if(this.isLogin){\r\n                window.location.href = this.serverUrl + \"/download/downloadSong?id=\" + row.id;\r\n            } else{\r\n                //询问要不要登录\r\n                this.$confirm('还未登录,是否现在登录?', '提示', {\r\n                  confirmButtonText: '确定',\r\n                  cancelButtonText: '取消',\r\n                }).then(() => {\r\n                  window.location.href='/';\r\n                }).catch(() => {\r\n                });\r\n            }\r\n        },\r\n        //获取用户歌单列表\r\n        getPlaylistList:function(){\r\n            if(this.isLogin){\r\n                this.playlistList=this.$store.state.playlistList;\r\n            }\r\n            else{\r\n                return false;\r\n            }\r\n        },\r\n        //获取歌单信息\r\n        getPlaylistIntro: function(){\r\n          this.axios.get(this.serverUrl+'/playlist/getInfo',{\r\n                params:{\r\n                  id:this.id\r\n                }\r\n              })\r\n              .then(response => {\r\n                console.log(response.data);\r\n                this.playlist = response.data;\r\n                if(this.playlist.image == null){\r\n                    this.playlist.image = emptyImage;\r\n                } else {\r\n                    this.playlist.image = this.serverUrl + this.playlist.image;\r\n                }\r\n                if(this.playlist.intro == null)\r\n                    this.playlist.intro = \" \";\r\n                this.playlistSongList = this.playlist.songList;\r\n                for(var i = 0; i < this.playlistSongList.length; i++){\r\n                    this.playlistSongList[i].filePath = this.serverUrl + this.playlistSongList[i].filePath;\r\n                    this.playlistSongList[i].image = this.serverUrl + this.playlistSongList[i].image;\r\n                    this.playlistSongList[i].lyricsPath = this.serverUrl + this.playlistSongList[i].lyricsPath;\r\n                    this.$set(this.playlistSongList[i],'Flag',false);\r\n                    this.$set(this.playlistSongList[i],'isopen',false);\r\n                }\r\n                this.computePageCount();\r\n                this.pagination(1);\r\n              })\r\n              .catch(function(err){\r\n                console.log(err);\r\n              });\r\n        },\r\n        //提交编辑后的歌单\r\n        submitForm:function(){\r\n            this.$refs[\"ruleForm\"].validate((valid) => {\r\n              if (valid) {\r\n                if(this.hasChangeImage){\r\n                  this.$nextTick(() => {\r\n                    this.$refs.uploadImage.submit(); \r\n                  });\r\n                }\r\n                this.axios.post(this.serverUrl+'/playlist/modifyInfo',{\r\n                  id:this.ruleForm.id,\r\n                  name:this.ruleForm.name,\r\n                  intro:this.ruleForm.intro,\r\n                })\r\n                .then(response =>{\r\n                  if(response){\r\n                    this.$refs[\"ruleForm\"].resetFields();\r\n                    if(!this.hasChangeImage){\r\n                        this.getPlaylistIntro();\r\n                    }\r\n                    this.handleOverflow();\r\n                    this.editDialogVisible=false;\r\n                    this.$message({\r\n                      showClose: true,\r\n                      message: '歌单编辑成功',\r\n                      type: 'success'\r\n                    });\r\n                    this.hasChangeImage = false;\r\n                  }\r\n                  else{\r\n                    this.$message({\r\n                      showClose: true,\r\n                      message: '会话超时',\r\n                      type: 'error'\r\n                    });\r\n                  }\r\n                })\r\n                .catch(function(err){\r\n                  console.log(err);\r\n                });\r\n              } \r\n              else {\r\n                this.$message({\r\n                  showClose: true,\r\n                  message: '格式不正确',\r\n                  type: 'error'\r\n                });\r\n                return false;\r\n              }\r\n            });\r\n        },\r\n        //控制分页操作\r\n        handleChange: function(val){\r\n            if(val != this.page){\r\n                this.pagination(val);\r\n            }\r\n        },\r\n        //按顺序分页展示歌曲，一页展示20首，避免因为分页后索引总是从1开始的情况\r\n        pagination: function(_page){\r\n            this.page = _page;\r\n            this.songsView.splice(0,this.songsView.length);\r\n            for(var i = 0; i < 20; i++){\r\n                if(this.playlistSongList[((_page - 1)*20) + i] == null){\r\n                } else {\r\n                    var _songList = this.playlistSongList[((_page - 1)*20) + i];\r\n                    this.songsView.push(_songList);\r\n                }\r\n            }\r\n            \r\n        },\r\n        //根据歌曲量动态显示分页总数\r\n        computePageCount: function(){\r\n            this.pageCount = Math.ceil(parseFloat(this.playlistSongList.length) / 20);\r\n        },\r\n        //添加歌单所有歌曲到播放列表，调用公共函数addToSongList\r\n        addAllToSongList: function(){\r\n            this.$store.dispatch(\"addToSongList\", this.playlistSongList);\r\n        },\r\n        //歌曲添加到播放队列，调用公共函数addToSongList\r\n        addToSongList: function(index){\r\n            index = (this.page - 1) * 20 + index;\r\n            var song = this.playlistSongList[index];\r\n            var songs = [song];\r\n            this.$store.dispatch(\"addToSongList\", songs);\r\n        },\r\n        //播放歌曲，调用公共函数play\r\n        playSong:function(index){\r\n            //传递歌曲ID给player.vue\r\n            var startIndex = (this.page - 1) * 20 + index;\r\n            this.$store.dispatch(\"play\", [this.playlistSongList, startIndex, false]);\r\n        },\r\n        //删除对应行的歌曲\r\n        deleteSong:function(row, index){\r\n            this.axios.get(this.serverUrl+'/playlist/removeSong',{\r\n                params:{\r\n                    songId: row.id,\r\n                    playlistId: this.playlist.id,\r\n                }\r\n            })\r\n            .then(response =>{\r\n                if(response){\r\n                    this.playlistSongList.splice((this.page-1)*20+index,1);\r\n                    this.pagination(this.page);\r\n                    this.$message({\r\n                      showClose: true,\r\n                      message: '歌曲移出歌单',\r\n                      type: 'success'\r\n                    });\r\n                }\r\n                else{\r\n                    this.$message({\r\n                        showClose: true,\r\n                        message: '会话超时',\r\n                        type: 'error'\r\n                    });\r\n                }\r\n            })\r\n            .catch(function(err){\r\n              console.log(err);\r\n            });\r\n\r\n        },\r\n        //上传图片\r\n        editImage:function(file, filelist){\r\n            if(this.beforeAvatarUpload(file))\r\n            {\r\n              this.ruleForm.image=file.url;\r\n              this.hasChangeImage = true;\r\n              if(filelist.length>1)\r\n              {\r\n                filelist.splice(0,1);\r\n              }\r\n            }\r\n            else{\r\n              filelist.splice(filelist.length-1,1);\r\n            }\r\n        },\r\n        //提示上传成功\r\n        handleAvatarSuccess: function() {\r\n            this.getPlaylistIntro();\r\n            alert(\"上传成功\");\r\n            this.hasChangeImage = false;\r\n        },\r\n        //对用户上传的图片进行大小及格式验证\r\n        beforeAvatarUpload(file) {\r\n            const isType = file.type === 'image/jpg'||'image/jpeg'||'image/png';\r\n            const isLt2M = file.size / 1024 / 1024 < 2;\r\n            if (!isType) {\r\n                this.$message.error('上传图片只能是jpg/jpeg/png格式!');\r\n            }\r\n            if (!isLt2M) {\r\n            this.$message.error('上传歌单封面大小不能超过 2MB!');\r\n            }\r\n            return isType && isLt2M;\r\n        },\r\n        //新建歌单，提交相关数据到对应url\r\n        createPlaylist: function(){\r\n            this.$refs[\"newPlaylist\"].validate((valid) => {\r\n                if (valid) {\r\n                    this.axios.post(this.serverUrl+'/playlist/create',{\r\n                        name:this.newPlaylist.name,\r\n                        intro:this.newPlaylist.intro\r\n                    })\r\n                    .then(response =>{\r\n                        if(response.data != -1){\r\n                            var thisPlaylist={id:response.data,name:this.newPlaylist.name,intro:this.newPlaylist.intro};\r\n                            this.$store.state.playlistList.push(thisPlaylist);\r\n                            sessionStorage.setItem('playlistList', JSON.stringify(this.state.playlistList));\r\n                            this.getPlaylistList();\r\n                            this.dialogVisible=false;\r\n                            this.$refs[\"newPlaylist\"].resetFields();\r\n                            this.$message({\r\n                                showClose: true,\r\n                                message: '歌单创建成功',\r\n                                type: 'success'\r\n                            });\r\n                            if(this.newPlaylist.type==\"song\"){\r\n                                this.addSongToPlaylist(this.newPlaylist.info,response.data);\r\n                            }\r\n                            else if(this.newPlaylist.type==\"playlist\"){\r\n                                this.addPlaylistToPlaylist(response.data);\r\n                            }\r\n                            else if(this.newPlaylist.type==''){\r\n                                return false;\r\n                            }\r\n                        }\r\n                        else{\r\n                            this.$message({\r\n                                showClose: true,\r\n                                message: '会话超时',\r\n                                type: 'error'\r\n                            });\r\n                        }\r\n                    })\r\n                    .catch(function(err){\r\n                        console.log(err);\r\n                    });\r\n                } \r\n                else {\r\n                    this.$message({\r\n                        showClose: true,\r\n                        message: '格式不正确',\r\n                        type: 'error'\r\n                    });\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        //在编辑歌单表单中显示未修改的歌单信息\r\n        clickOnEdit: function(){\r\n            this.ruleForm.id = this.playlist.id;\r\n            this.ruleForm.name = this.playlist.name;\r\n            this.ruleForm.intro = this.playlist.intro;\r\n            if(this.playlist.image != emptyImage){\r\n                this.ruleForm.image = this.playlist.image;\r\n            }\r\n        },\r\n        //取消编辑操作\r\n        cancelEdit: function(done){\r\n            this.$confirm('确认关闭？')\r\n            .then(_ => {\r\n                this.clickOnEdit();\r\n                this.editDialogVisible=false;\r\n                done();\r\n            })\r\n            .catch(_ => { });\r\n\r\n        },\r\n        //提示上传失败\r\n        uploadFail: function(err, file, fileList){\r\n            alert(\"上传失败\");\r\n        }\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nel-row{\r\n    width: 1000px;\r\n}\r\n\r\n.playlistDetail{\r\n    /*width:90%;*/\r\n    height:100%;\r\n    /*margin-left: 100px;*/\r\n}\r\n\r\n#playlistIntro{\r\n    display: -webkit-box;\r\n    -webkit-box-orient: vertical;\r\n    -webkit-line-clamp: 4;\r\n    overflow: hidden;\r\n}\r\n.songTable{\r\n    /*width:100%;*/\r\n    /*margin-left:132px;*/\r\n    overflow:hidden;\r\n}\r\n.intro{\r\n    padding-top:15px;\r\n}\r\n.btn2{\r\n    margin-top:25px;\r\n    height:45px;\r\n    width:120px;\r\n    text-align:center;\r\n    margin-right:20px;\r\n}\r\n.pagination {\r\n    font-size: 30px;\r\n    /*padding-left:-300px;*/\r\n}\r\n.el-popover{\r\n  width:550px;\r\n  height:400px;\r\n  word-wrap: break-word; \r\n  word-break: normal; \r\n  overflow-x:hidden;\r\n  overflow-y:scroll;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/user/page/playlistdetail.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-header'),_vm._v(\" \"),_c('div',{staticClass:\"playlistDetail\",attrs:{\"data\":_vm.playlist}},[_c('el-row',[_c('div',{staticClass:\"playlistInfo\"},[_c('el-col',{attrs:{\"span\":5,\"offset\":4}},[_c('div',[_c('img',{staticStyle:{\"width\":\"230px\",\"height\":\"230px\",\"margin-top\":\"20px\"},attrs:{\"src\":_vm.playlist.image,\"onerror\":\"this.style.display='none'\"}})])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":10}},[_c('div',[_c('div',{staticClass:\"intro\"},[_c('h2',[_vm._v(_vm._s(_vm.playlist.name))]),_vm._v(\" \"),_c('p',[_vm._v(\"简介\")]),_vm._v(\" \"),_c('p',{staticStyle:{\"width\":\"500px\",\"display\":\"-webkit-box\",\"-webkit-box-orient\":\"vertical\",\"-webkit-line-clamp\":\"1\",\"overflow\":\"hidden\",\"float\":\"left\",\"margin-top\":\"0px\"},attrs:{\"id\":\"playlistIntro\"}},[_vm._v(_vm._s(_vm.playlist.intro))]),_vm._v(\" \"),(this.isOverflow)?_c('el-popover',{staticStyle:{\"float\":\"left\"},attrs:{\"placement\":\"left\",\"title\":\"简介\",\"trigger\":\"click\"}},[_c('p',{staticClass:\"font_des\",staticStyle:{\"width\":\"600px\"}},[_vm._v(_vm._s(_vm.playlist.intro))]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"color\":\"black\",\"margin-left\":\"20px\",\"padding-top\":\"15px\"},attrs:{\"slot\":\"reference\",\"type\":\"text\",\"onmouseover\":\"this.style.color='#31C27C';\",\"onmouseout\":\"this.style.color='black';\"},slot:\"reference\"},[_vm._v(\"[更多]\")])],1):_vm._e()],1),_vm._v(\" \"),_c('el-button',{staticClass:\"btn2\",attrs:{\"type\":\"primary\",\"icon\":\"el-icon-caret-right\"},on:{\"click\":_vm.playAllSong}},[_vm._v(\"播放全部\")]),_vm._v(\" \"),_c('el-popover',{ref:\"\",attrs:{\"placement\":\"right\",\"width\":\"500\",\"trigger\":\"click\"},model:{value:(_vm.editDialogVisible),callback:function ($$v) {_vm.editDialogVisible=$$v},expression:\"editDialogVisible\"}},[_c('el-form',{ref:\"ruleForm\",attrs:{\"model\":_vm.ruleForm,\"rules\":_vm.rules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"歌单名称\",\"prop\":\"name\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入歌单名称\"},model:{value:(_vm.ruleForm.name),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"name\", $$v)},expression:\"ruleForm.name\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"歌单简介\",\"prop\":\"intro\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"placeholder\":\"请输入歌单简介\"},model:{value:(_vm.ruleForm.intro),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"intro\", $$v)},expression:\"ruleForm.intro\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"上传图片\",\"prop\":\"image\"}},[_c('el-upload',{ref:\"uploadImage\",staticClass:\"avatar-uploader\",attrs:{\"action\":\"/hifive/upload/uploadPlaylistImage\",\"auto-upload\":false,\"list-type\":\"picture-card\",\"show-file-list\":false,\"data\":{id:_vm.ruleForm.id},\"on-change\":_vm.editImage,\"on-success\":_vm.handleAvatarSuccess,\"on-error\":_vm.uploadFail,\"accept\":\".jpg, .jpeg, .png\"}},[(_vm.ruleForm.image)?_c('img',{staticStyle:{\"width\":\"150px\",\"height\":\"150px\"},attrs:{\"src\":_vm.ruleForm.image,\"alt\":\"\"}}):_c('i',{staticClass:\"el-icon-plus avatar-uploader-icon\"})])],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.submitForm('ruleForm')}}},[_vm._v(\"完成\")]),_vm._v(\" \"),_c('el-button',{on:{\"click\":_vm.cancelEdit}},[_vm._v(\"取消\")])],1)],1),_vm._v(\" \"),_c('el-button',{staticClass:\"btn2\",attrs:{\"slot\":\"reference\"},on:{\"click\":_vm.clickOnEdit},slot:\"reference\"},[_vm._v(\"编辑歌单\")])],1),_vm._v(\" \"),_c('el-dropdown',{attrs:{\"trigger\":\"click\"},on:{\"command\":_vm.handlePlaylistCommand}},[_c('el-button',{staticClass:\"btn2\",attrs:{\"icon\":\"el-icon-plus\"}},[_vm._v(\"添加到\"),_c('i',{staticClass:\"el-icon-arrow-down el-icon--right\"})]),_vm._v(\" \"),_c('el-dropdown-menu',{attrs:{\"slot\":\"dropdown\",\"data\":_vm.playlistList},slot:\"dropdown\"},[_c('el-dropdown-item',{attrs:{\"command\":{type:\"playqueue\"}}},[_vm._v(\"播放队列\")]),_vm._v(\" \"),(_vm.isLogin)?_c('div',[_vm._l((_vm.playlistList),function(playlist){return _c('el-dropdown-item',{key:playlist.id,attrs:{\"command\":{type:\"playlist\",param1:playlist.id}}},[_vm._v(_vm._s(playlist.name))])}),_vm._v(\" \"),_c('el-dropdown-item',{attrs:{\"command\":{type:\"newplaylist\"},\"divided\":\"\"}},[_vm._v(\"添加到新歌单\")])],2):_c('el-dropdown-item',{attrs:{\"command\":{type:\"login\"},\"divided\":\"\"}},[_vm._v(\"登录后添加到歌单\")])],1)],1)],1)])],1)]),_vm._v(\" \"),_c('el-row',[_c('el-col',{attrs:{\"span\":15.5,\"offset\":4}},[_c('div',{staticClass:\"playlistSongList\"},[_c('el-table',{staticClass:\"songTable\",attrs:{\"data\":_vm.songsView,\"max-height\":\"1350\"},on:{\"cell-mouse-enter\":_vm.handleMouseEnter,\"cell-mouse-leave\":_vm.handleMouseOut}},[_c('el-table-column',{attrs:{\"type\":\"index\",\"label\":\" \",\"index\":_vm.indexMethod}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"歌曲\",\"width\":\"200\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('router-link',{attrs:{\"to\":{ path: '/user/songdetail', query: {id:_vm.playlistSongList[scope.$index].id}}}},[_c('el-button',{staticStyle:{\"color\":\"black\",\"cursor\":\"pointer\",\"text-decoration\":\"none\"},attrs:{\"type\":\"text\",\"onmouseover\":\"this.style.color='#31C27C';\",\"onmouseout\":\"this.style.color='black';\"}},[_vm._v(_vm._s(scope.row.name))])],1)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\" \",\"width\":\"200\",\"type\":\"index\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.Flag)?_c('span',[_c('el-button',{attrs:{\"icon\":\"el-icon-caret-right\",\"circle\":\"\"},on:{\"click\":function($event){_vm.playSong(scope.$index)}}})],1):_vm._e(),_vm._v(\" \"),(scope.row.Flag)?_c('span',[_c('el-dropdown',{attrs:{\"trigger\":\"click\",\"placement\":\"bottom-start\"},on:{\"visible-change\":function($event){_vm.handle(scope.row,$event)},\"command\":_vm.handleSongCommand}},[_c('el-button',{attrs:{\"icon\":\"el-icon-plus\",\"circle\":\"\"}}),_vm._v(\" \"),_c('el-dropdown-menu',{attrs:{\"slot\":\"dropdown\",\"data\":_vm.playlistList},slot:\"dropdown\"},[_c('el-dropdown-item',{attrs:{\"command\":{type:\"playqueue\"}},nativeOn:{\"click\":function($event){_vm.addToSongList(scope.$index)}}},[_vm._v(\"播放队列\")]),_vm._v(\" \"),(_vm.isLogin)?_c('div',[_vm._l((_vm.playlistList),function(playlist){return _c('el-dropdown-item',{key:playlist.id,attrs:{\"command\":{type:\"playlist\",param1:playlist.id,param2:scope.row}}},[_vm._v(_vm._s(playlist.name))])}),_vm._v(\" \"),_c('el-dropdown-item',{attrs:{\"command\":{type:\"newplaylist\",params:scope.row},\"divided\":\"\"}},[_vm._v(\"添加到新歌单\")])],2):_c('el-dropdown-item',{attrs:{\"command\":{type:\"login\"},\"divided\":\"\"}},[_vm._v(\"登录后添加到歌单\")])],1)],1)],1):_vm._e(),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"创建歌单\",\"visible\":_vm.dialogVisible,\"width\":\"30%\",\"before-close\":_vm.handleClose},on:{\"update:visible\":function($event){_vm.dialogVisible=$event}}},[_c('el-form',{ref:\"newPlaylist\",attrs:{\"model\":_vm.newPlaylist,\"rules\":_vm.rules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"歌单名称\",\"prop\":\"name\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入歌单名称\"},model:{value:(_vm.newPlaylist.name),callback:function ($$v) {_vm.$set(_vm.newPlaylist, \"name\", $$v)},expression:\"newPlaylist.name\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"歌单简介\",\"prop\":\"intro\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"placeholder\":\"请输入歌单简介\"},model:{value:(_vm.newPlaylist.intro),callback:function ($$v) {_vm.$set(_vm.newPlaylist, \"intro\", $$v)},expression:\"newPlaylist.intro\"}})],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.createPlaylist}},[_vm._v(\"完成\")]),_vm._v(\" \"),_c('el-button',{on:{\"click\":function($event){_vm.dialogVisible=false}}},[_vm._v(\"取消\")])],1)],1)],1),_vm._v(\" \"),(scope.row.Flag)?_c('span',[_c('el-button',{attrs:{\"icon\":\"el-icon-download\",\"circle\":\"\"},on:{\"click\":function($event){_vm.downloadSong(scope.row)}}})],1):_vm._e()]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"歌手\",\"width\":\"150\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('router-link',{attrs:{\"to\":{ path: '/user/artistdetail', query: {id:_vm.playlistSongList[scope.$index].artistId }}}},[_c('el-button',{staticStyle:{\"color\":\"black\",\"cursor\":\"pointer\",\"text-decoration\":\"none\"},attrs:{\"type\":\"text\",\"onmouseover\":\"this.style.color='#31C27C';\",\"onmouseout\":\"this.style.color='black';\"}},[_vm._v(_vm._s(scope.row.artistName))])],1)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"专辑\",\"width\":\"150\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('router-link',{attrs:{\"to\":{ path: '/user/albumdetail', query: { id: scope.row.albumId }}}},[_c('el-button',{staticStyle:{\"color\":\"black\",\"cursor\":\"pointer\",\"text-decoration\":\"none\"},attrs:{\"type\":\"text\",\"onmouseover\":\"this.style.color='#31C27C';\",\"onmouseout\":\"this.style.color='black';\"}},[_vm._v(_vm._s(scope.row.albumName))])],1)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"时长\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.Flag)?_c('span',[_c('el-button',{attrs:{\"icon\":\"el-icon-delete\",\"circle\":\"\"},on:{\"click\":function($event){_vm.deleteSong(scope.row,scope.$index)}}})],1):_c('span',{staticClass:\"font_other\"},[_vm._v(_vm._s(scope.row.duration))])]}}])})],1),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('br')],1)])],1),_vm._v(\" \"),_c('el-row',[_c('el-col',{staticStyle:{\"text-align\":\"center\"},attrs:{\"span\":15,\"offset\":4}},[_c('el-pagination',{staticClass:\"pagination\",attrs:{\"page-count\":_vm.pageCount,\"layout\":\"prev, pager, next\"},on:{\"current-change\":_vm.handleChange}})],1)],1)],1),_vm._v(\" \"),_c('v-foot')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.2@vue-loader/lib/template-compiler?{\"id\":\"data-v-18bfc5ff\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.2@vue-loader/lib/selector.js?type=template&index=0!./src/components/user/page/playlistdetail.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-18bfc5ff\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=styles&index=0!./playlistdetail.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=script&index=0!./playlistdetail.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=script&index=0!./playlistdetail.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-18bfc5ff\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=template&index=0!./playlistdetail.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-18bfc5ff\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/user/page/playlistdetail.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}